-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pp_pipeline_accel_resizeNNBilinear_9_2160_3840_1_720_720_1_9_Pipeline_VITIS_LOOP_394_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rgb_mat_data83_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    rgb_mat_data83_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    rgb_mat_data83_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    rgb_mat_data83_empty_n : IN STD_LOGIC;
    rgb_mat_data83_read : OUT STD_LOGIC;
    resize_out_mat_data84_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    resize_out_mat_data84_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    resize_out_mat_data84_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    resize_out_mat_data84_full_n : IN STD_LOGIC;
    resize_out_mat_data84_write : OUT STD_LOGIC;
    indexy_V : IN STD_LOGIC_VECTOR (16 downto 0);
    nextYScale_V : IN STD_LOGIC_VECTOR (16 downto 0);
    ret_V_20 : IN STD_LOGIC_VECTOR (16 downto 0);
    loop_col_count : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp352 : IN STD_LOGIC_VECTOR (0 downto 0);
    line_buffer_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_ce0 : OUT STD_LOGIC;
    line_buffer_V_we0 : OUT STD_LOGIC;
    line_buffer_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_ce1 : OUT STD_LOGIC;
    line_buffer_V_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_1_ce0 : OUT STD_LOGIC;
    line_buffer_V_1_we0 : OUT STD_LOGIC;
    line_buffer_V_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_1_ce1 : OUT STD_LOGIC;
    line_buffer_V_1_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    tmp_V : IN STD_LOGIC_VECTOR (31 downto 0);
    first_row_index_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    line_buffer_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_2_ce0 : OUT STD_LOGIC;
    line_buffer_V_2_we0 : OUT STD_LOGIC;
    line_buffer_V_2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_2_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_2_ce1 : OUT STD_LOGIC;
    line_buffer_V_2_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    trunc_ln3 : IN STD_LOGIC_VECTOR (47 downto 0);
    indexy_pre_V : IN STD_LOGIC_VECTOR (21 downto 0);
    add_i_i_i_i_i368_i : IN STD_LOGIC_VECTOR (16 downto 0);
    ret_V_17_cast : IN STD_LOGIC_VECTOR (16 downto 0);
    p_Result_s : IN STD_LOGIC;
    indexy_pre_V_cast : IN STD_LOGIC_VECTOR (23 downto 0);
    shl_i_i_i_i_i : IN STD_LOGIC_VECTOR (53 downto 0);
    indexx_pre_V_1 : IN STD_LOGIC_VECTOR (41 downto 0);
    cmp120 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    icmp_ln1077_1 : IN STD_LOGIC_VECTOR (0 downto 0);
    op2_assign_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    op2_assign : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp357 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    indexy_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    indexy_V_1_out_ap_vld : OUT STD_LOGIC;
    nextYScale_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    nextYScale_V_1_out_ap_vld : OUT STD_LOGIC;
    indexy_pre_comp_V_scaleCompute_17_42_20_48_16_1_s_fu_191_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    indexy_pre_comp_V_scaleCompute_17_42_20_48_16_1_s_fu_191_p_din2 : OUT STD_LOGIC_VECTOR (47 downto 0);
    indexy_pre_comp_V_scaleCompute_17_42_20_48_16_1_s_fu_191_p_dout0 : IN STD_LOGIC_VECTOR (41 downto 0);
    indexy_pre_comp_V_scaleCompute_17_42_20_48_16_1_s_fu_191_p_ready : IN STD_LOGIC );
end;


architecture behav of pp_pipeline_accel_resizeNNBilinear_9_2160_3840_1_720_720_1_9_Pipeline_VITIS_LOOP_394_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln394_reg_1635 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_1655 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op95_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal and_ln492_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1665_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1669 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1669_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1673 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1673_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op319_write_state8 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln394_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal rgb_mat_data83_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal resize_out_mat_data84_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln394_reg_1635_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_row_index_4_read_reg_1617 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_reg_1659 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_1659_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp120_read_read_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp352_read_read_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_reg_1630 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln394_reg_1635_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1635_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1635_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1635_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indexx_pre_comp_V_reg_1639 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln884_fu_659_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln884_reg_1645 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1695_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_reg_1650 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_1659_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1665_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1665_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1665_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1665_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1665_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1669_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1669_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1669_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1669_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1669_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1673_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1673_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1673_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1673_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1673_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_1_addr_gep_fu_422_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_1_addr_1_gep_fu_430_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_addr_gep_fu_446_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_addr_1_gep_fu_454_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_addr_gep_fu_462_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_addr_1_gep_fu_470_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wy_V_fu_887_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wy_V_reg_1737 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_fu_901_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1747 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1747_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln674_fu_922_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1757 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1757_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1757_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1757_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1757_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1541_fu_930_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_reg_1762 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_2_fu_934_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_2_reg_1768 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1319_fu_948_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1541_4_fu_971_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_4_reg_1785 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_6_fu_975_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_6_reg_1791 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_reg_1801 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_1801_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_1801_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_1801_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_1801_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1541_8_fu_1019_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_8_reg_1806 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_10_fu_1023_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1541_10_reg_1812 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_reg_1822 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1822_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1822_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1822_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1822_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal val0_V_fu_1088_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_reg_1827 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1319_1_fu_1103_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal val0_V_1_fu_1152_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_1_reg_1844 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_2_fu_1213_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_2_reg_1854 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln864_1_fu_1237_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_phi_mux_read_pixel_1_phi_fu_490_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_read_pixel_1_reg_486 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_flag_write_phi_fu_508_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_flag_write_reg_504 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_flag_write_reg_504 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_P0Buf_V_6_phi_fu_522_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_P0Buf_V_6_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_P1Buf_V_9_phi_fu_536_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_P1Buf_V_9_reg_533 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_P0Buf_V_7_reg_547 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_P0Buf_V_7_reg_547 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_P0Buf_V_7_reg_547 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_P0Buf_V_7_reg_547 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_P1Buf_V_8_reg_558 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_P1Buf_V_8_reg_558 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_P1Buf_V_8_reg_558 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln400_fu_632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln435_fu_867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln394_fu_734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal nextYScale_V_1_fu_168 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal tmp_fu_172 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_19_fu_651_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_fu_176 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln394_fu_622_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_allocacmp_j_1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_read_read_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln394_1_fu_612_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln400_fu_628_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln1049_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_19_fu_651_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1048_fu_643_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1696_fu_663_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln1696_fu_663_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln413_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1065_fu_685_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_1_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_fu_740_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_fu_752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal indexx_pre_V_3_fu_759_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal indexx_pre_V_fu_764_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln1049_fu_790_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln_fu_772_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1049_1_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_4_fu_800_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_1_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1048_1_fu_806_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal idx_2_fu_814_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln884_1_fu_822_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln859_fu_834_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_1_fu_826_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal idx_fu_844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_cmp_i_i176_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_848_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln433_fu_857_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal idx_nxt_fu_861_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_fu_747_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_6_fu_838_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal P0Buf_V_10_fu_915_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln674_1_fu_926_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal val1_V_fu_938_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_951_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_961_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal val1_V_1_fu_979_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_999_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_1009_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal val1_V_2_fu_1027_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal P0Buf_V_11_fu_1047_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln674_3_fu_1058_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_2_fu_1054_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln75_fu_1074_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln75_fu_1078_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_3_fu_1066_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln75_1_fu_1082_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_1_fu_1062_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln75_fu_1070_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal val2_V_fu_1094_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_1116_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_1106_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln75_4_fu_1138_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln75_1_fu_1142_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_7_fu_1130_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln75_5_fu_1146_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_5_fu_1126_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln75_1_fu_1134_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal val2_V_1_fu_1158_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_fu_1177_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_1167_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln75_8_fu_1199_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln75_2_fu_1203_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_11_fu_1191_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln75_9_fu_1207_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1541_9_fu_1187_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln75_2_fu_1195_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal val2_V_2_fu_1219_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal Wxy_V_fu_1228_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1497_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal Wxy_V_fu_1228_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1504_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1511_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1518_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1525_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1534_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1543_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1552_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_fu_1268_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1393_1_fu_1275_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1393_fu_1278_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_8_fu_1282_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln1049_1_fu_1306_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1029_1_fu_1288_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1049_2_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_9_fu_1316_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_1298_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1048_3_fu_1322_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1561_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_1_fu_1338_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1393_4_fu_1345_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1393_1_fu_1348_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_12_fu_1352_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln1049_2_fu_1376_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1029_2_fu_1358_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1049_3_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_13_fu_1386_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1368_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1048_4_fu_1392_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1570_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_2_fu_1408_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1393_7_fu_1415_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1393_2_fu_1418_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_16_fu_1422_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln1049_3_fu_1446_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1029_3_fu_1428_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1049_4_fu_1450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_17_fu_1456_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_fu_1438_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1048_5_fu_1462_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_18_fu_1470_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_14_fu_1400_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_10_fu_1330_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1497_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1497_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1504_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1511_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1518_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1525_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1534_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1543_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1552_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1561_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1570_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1497_ce : STD_LOGIC;
    signal grp_fu_1504_ce : STD_LOGIC;
    signal grp_fu_1511_ce : STD_LOGIC;
    signal grp_fu_1518_ce : STD_LOGIC;
    signal grp_fu_1525_ce : STD_LOGIC;
    signal grp_fu_1534_ce : STD_LOGIC;
    signal grp_fu_1543_ce : STD_LOGIC;
    signal grp_fu_1552_ce : STD_LOGIC;
    signal grp_fu_1561_ce : STD_LOGIC;
    signal grp_fu_1570_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1497_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1497_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_272 : BOOLEAN;
    signal ap_condition_387 : BOOLEAN;
    signal ap_condition_633 : BOOLEAN;
    signal ap_condition_229 : BOOLEAN;
    signal ap_condition_1517 : BOOLEAN;
    signal ap_condition_412 : BOOLEAN;
    signal ap_condition_1523 : BOOLEAN;
    signal ap_condition_399 : BOOLEAN;
    signal ap_condition_411 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component pp_pipeline_accel_scaleCompute_17_42_20_48_16_1_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        currindex : IN STD_LOGIC_VECTOR (31 downto 0);
        inscale : IN STD_LOGIC_VECTOR (47 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component pp_pipeline_accel_mul_mul_12ns_12ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component pp_pipeline_accel_mul_mul_12ns_9s_21_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component pp_pipeline_accel_mac_muladd_12ns_9s_21s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component pp_pipeline_accel_mac_muladd_12ns_10s_22s_23_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component pp_pipeline_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_mul_12ns_12ns_24_4_1_U191 : component pp_pipeline_accel_mul_mul_12ns_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1497_p0,
        din1 => grp_fu_1497_p1,
        ce => grp_fu_1497_ce,
        dout => grp_fu_1497_p2);

    mul_mul_12ns_9s_21_4_1_U192 : component pp_pipeline_accel_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1504_p0,
        din1 => val1_V_fu_938_p2,
        ce => grp_fu_1504_ce,
        dout => grp_fu_1504_p2);

    mul_mul_12ns_9s_21_4_1_U193 : component pp_pipeline_accel_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1511_p0,
        din1 => val1_V_1_fu_979_p2,
        ce => grp_fu_1511_ce,
        dout => grp_fu_1511_p2);

    mul_mul_12ns_9s_21_4_1_U194 : component pp_pipeline_accel_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1518_p0,
        din1 => val1_V_2_fu_1027_p2,
        ce => grp_fu_1518_ce,
        dout => grp_fu_1518_p2);

    mac_muladd_12ns_9s_21s_22_4_1_U195 : component pp_pipeline_accel_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1525_p0,
        din1 => val2_V_fu_1094_p2,
        din2 => grp_fu_1504_p2,
        ce => grp_fu_1525_ce,
        dout => grp_fu_1525_p3);

    mac_muladd_12ns_9s_21s_22_4_1_U196 : component pp_pipeline_accel_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1534_p0,
        din1 => val2_V_1_fu_1158_p2,
        din2 => grp_fu_1511_p2,
        ce => grp_fu_1534_ce,
        dout => grp_fu_1534_p3);

    mac_muladd_12ns_9s_21s_22_4_1_U197 : component pp_pipeline_accel_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1543_p0,
        din1 => val2_V_2_fu_1219_p2,
        din2 => grp_fu_1518_p2,
        ce => grp_fu_1543_ce,
        dout => grp_fu_1543_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U198 : component pp_pipeline_accel_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1552_p0,
        din1 => val0_V_reg_1827,
        din2 => grp_fu_1525_p3,
        ce => grp_fu_1552_ce,
        dout => grp_fu_1552_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U199 : component pp_pipeline_accel_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1561_p0,
        din1 => val0_V_1_reg_1844,
        din2 => grp_fu_1534_p3,
        ce => grp_fu_1561_ce,
        dout => grp_fu_1561_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U200 : component pp_pipeline_accel_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1570_p0,
        din1 => val0_V_2_reg_1854,
        din2 => grp_fu_1543_p3,
        ce => grp_fu_1570_ce,
        dout => grp_fu_1570_p3);

    flow_control_loop_pipe_sequential_init_U : component pp_pipeline_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_flag_write_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln411_fu_679_p2) and (cmp120_read_read_fu_216_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((cmp120_read_read_fu_216_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_flag_write_reg_504 <= ap_const_lv1_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_flag_write_reg_504 <= ap_phi_reg_pp0_iter0_flag_write_reg_504;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_P0Buf_V_7_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((first_row_index_4_read_reg_1617 = ap_const_lv32_1) and (icmp_ln394_reg_1635_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_P0Buf_V_7_reg_547 <= line_buffer_V_1_q0;
                elsif ((ap_const_boolean_1 = ap_condition_272)) then 
                    ap_phi_reg_pp0_iter3_P0Buf_V_7_reg_547 <= line_buffer_V_2_q0;
                elsif (((first_row_index_4_read_reg_1617 = ap_const_lv32_0) and (icmp_ln394_reg_1635_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_P0Buf_V_7_reg_547 <= line_buffer_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_P0Buf_V_7_reg_547 <= ap_phi_reg_pp0_iter2_P0Buf_V_7_reg_547;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((first_row_index_4_read_reg_1617 = ap_const_lv32_1) and (icmp_ln394_reg_1635_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558 <= line_buffer_V_2_q0;
                elsif ((ap_const_boolean_1 = ap_condition_272)) then 
                    ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558 <= line_buffer_V_q0;
                elsif (((first_row_index_4_read_reg_1617 = ap_const_lv32_0) and (icmp_ln394_reg_1635_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558 <= line_buffer_V_1_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558 <= ap_phi_reg_pp0_iter2_P1Buf_V_8_reg_558;
                end if;
            end if; 
        end if;
    end process;

    j_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1))) then 
                    j_fu_176 <= add_ln394_fu_622_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_176 <= ap_const_lv31_0;
                end if;
            end if; 
        end if;
    end process;

    nextYScale_V_1_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1))) then 
                    nextYScale_V_1_fu_168 <= ret_V_20;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    nextYScale_V_1_fu_168 <= nextYScale_V;
                end if;
            end if; 
        end if;
    end process;

    tmp_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1))) then 
                    tmp_fu_172 <= ret_V_19_fu_651_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_fu_172 <= indexy_V;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_0 = and_ln492_reg_1665) and (cmp352 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln491_reg_1673)) or ((icmp_ln494_reg_1669 = ap_const_lv1_1) and (cmp352 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln492_reg_1665))))) then
                Wx_V_reg_1747 <= ret_V_6_fu_838_p2(23 downto 12);
                Wy_V_reg_1737 <= ret_V_fu_747_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Wx_V_reg_1747_pp0_iter2_reg <= Wx_V_reg_1747;
                and_ln491_reg_1673_pp0_iter2_reg <= and_ln491_reg_1673_pp0_iter1_reg;
                and_ln491_reg_1673_pp0_iter3_reg <= and_ln491_reg_1673_pp0_iter2_reg;
                and_ln491_reg_1673_pp0_iter4_reg <= and_ln491_reg_1673_pp0_iter3_reg;
                and_ln491_reg_1673_pp0_iter5_reg <= and_ln491_reg_1673_pp0_iter4_reg;
                and_ln491_reg_1673_pp0_iter6_reg <= and_ln491_reg_1673_pp0_iter5_reg;
                and_ln492_reg_1665_pp0_iter2_reg <= and_ln492_reg_1665_pp0_iter1_reg;
                and_ln492_reg_1665_pp0_iter3_reg <= and_ln492_reg_1665_pp0_iter2_reg;
                and_ln492_reg_1665_pp0_iter4_reg <= and_ln492_reg_1665_pp0_iter3_reg;
                and_ln492_reg_1665_pp0_iter5_reg <= and_ln492_reg_1665_pp0_iter4_reg;
                and_ln492_reg_1665_pp0_iter6_reg <= and_ln492_reg_1665_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                icmp_ln1065_reg_1659_pp0_iter2_reg <= icmp_ln1065_reg_1659_pp0_iter1_reg;
                icmp_ln394_reg_1635_pp0_iter2_reg <= icmp_ln394_reg_1635_pp0_iter1_reg;
                icmp_ln394_reg_1635_pp0_iter3_reg <= icmp_ln394_reg_1635_pp0_iter2_reg;
                icmp_ln394_reg_1635_pp0_iter4_reg <= icmp_ln394_reg_1635_pp0_iter3_reg;
                icmp_ln394_reg_1635_pp0_iter5_reg <= icmp_ln394_reg_1635_pp0_iter4_reg;
                icmp_ln494_reg_1669_pp0_iter2_reg <= icmp_ln494_reg_1669_pp0_iter1_reg;
                icmp_ln494_reg_1669_pp0_iter3_reg <= icmp_ln494_reg_1669_pp0_iter2_reg;
                icmp_ln494_reg_1669_pp0_iter4_reg <= icmp_ln494_reg_1669_pp0_iter3_reg;
                icmp_ln494_reg_1669_pp0_iter5_reg <= icmp_ln494_reg_1669_pp0_iter4_reg;
                icmp_ln494_reg_1669_pp0_iter6_reg <= icmp_ln494_reg_1669_pp0_iter5_reg;
                tmp_11_reg_1822_pp0_iter3_reg <= tmp_11_reg_1822;
                tmp_11_reg_1822_pp0_iter4_reg <= tmp_11_reg_1822_pp0_iter3_reg;
                tmp_11_reg_1822_pp0_iter5_reg <= tmp_11_reg_1822_pp0_iter4_reg;
                tmp_11_reg_1822_pp0_iter6_reg <= tmp_11_reg_1822_pp0_iter5_reg;
                tmp_6_reg_1801_pp0_iter3_reg <= tmp_6_reg_1801;
                tmp_6_reg_1801_pp0_iter4_reg <= tmp_6_reg_1801_pp0_iter3_reg;
                tmp_6_reg_1801_pp0_iter5_reg <= tmp_6_reg_1801_pp0_iter4_reg;
                tmp_6_reg_1801_pp0_iter6_reg <= tmp_6_reg_1801_pp0_iter5_reg;
                trunc_ln674_reg_1757_pp0_iter3_reg <= trunc_ln674_reg_1757;
                trunc_ln674_reg_1757_pp0_iter4_reg <= trunc_ln674_reg_1757_pp0_iter3_reg;
                trunc_ln674_reg_1757_pp0_iter5_reg <= trunc_ln674_reg_1757_pp0_iter4_reg;
                trunc_ln674_reg_1757_pp0_iter6_reg <= trunc_ln674_reg_1757_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp120_read_read_fu_216_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln411_reg_1655 <= and_ln411_fu_679_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln492_fu_695_p2) and (cmp352_read_read_fu_282_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln491_reg_1673 <= and_ln491_fu_713_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln491_reg_1673_pp0_iter1_reg <= and_ln491_reg_1673;
                and_ln492_reg_1665_pp0_iter1_reg <= and_ln492_reg_1665;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln1065_reg_1659_pp0_iter1_reg <= icmp_ln1065_reg_1659;
                icmp_ln394_reg_1635 <= icmp_ln394_fu_616_p2;
                icmp_ln394_reg_1635_pp0_iter1_reg <= icmp_ln394_reg_1635;
                icmp_ln494_reg_1669_pp0_iter1_reg <= icmp_ln494_reg_1669;
                j_1_reg_1630 <= ap_sig_allocacmp_j_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp352_read_read_fu_282_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln492_reg_1665 <= and_ln492_fu_695_p2;
                icmp_ln1065_reg_1659 <= icmp_ln1065_fu_689_p2;
                icmp_ln494_reg_1669 <= icmp_ln494_fu_701_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_P0Buf_V_7_reg_547 <= ap_phi_reg_pp0_iter0_P0Buf_V_7_reg_547;
                ap_phi_reg_pp0_iter1_P1Buf_V_8_reg_558 <= ap_phi_reg_pp0_iter0_P1Buf_V_8_reg_558;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_P0Buf_V_7_reg_547 <= ap_phi_reg_pp0_iter1_P0Buf_V_7_reg_547;
                ap_phi_reg_pp0_iter2_P1Buf_V_8_reg_558 <= ap_phi_reg_pp0_iter1_P1Buf_V_8_reg_558;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1695_reg_1650 <= icmp_ln1695_fu_667_p2;
                indexx_pre_comp_V_reg_1639 <= indexy_pre_comp_V_scaleCompute_17_42_20_48_16_1_s_fu_191_p_dout0;
                trunc_ln884_reg_1645 <= trunc_ln884_fu_659_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((cmp352 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln492_reg_1665_pp0_iter1_reg) and (icmp_ln494_reg_1669_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln492_reg_1665_pp0_iter1_reg) and (cmp352 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln491_reg_1673_pp0_iter1_reg))))) then
                tmp_11_reg_1822 <= P0Buf_V_10_fu_915_p3(23 downto 16);
                tmp_6_reg_1801 <= P0Buf_V_10_fu_915_p3(15 downto 8);
                trunc_ln674_reg_1757 <= trunc_ln674_fu_922_p1;
                    zext_ln1541_10_reg_1812(7 downto 0) <= zext_ln1541_10_fu_1023_p1(7 downto 0);
                    zext_ln1541_2_reg_1768(7 downto 0) <= zext_ln1541_2_fu_934_p1(7 downto 0);
                    zext_ln1541_4_reg_1785(7 downto 0) <= zext_ln1541_4_fu_971_p1(7 downto 0);
                    zext_ln1541_6_reg_1791(7 downto 0) <= zext_ln1541_6_fu_975_p1(7 downto 0);
                    zext_ln1541_8_reg_1806(7 downto 0) <= zext_ln1541_8_fu_1019_p1(7 downto 0);
                    zext_ln1541_reg_1762(7 downto 0) <= zext_ln1541_fu_930_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((cmp352 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln492_reg_1665_pp0_iter2_reg) and (icmp_ln494_reg_1669_pp0_iter2_reg = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln492_reg_1665_pp0_iter2_reg) and (cmp352 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln491_reg_1673_pp0_iter2_reg))))) then
                val0_V_1_reg_1844 <= val0_V_1_fu_1152_p2;
                val0_V_2_reg_1854 <= val0_V_2_fu_1213_p2;
                val0_V_reg_1827 <= val0_V_fu_1088_p2;
            end if;
        end if;
    end process;
    zext_ln1541_reg_1762(8) <= '0';
    zext_ln1541_2_reg_1768(8) <= '0';
    zext_ln1541_4_reg_1785(8) <= '0';
    zext_ln1541_6_reg_1791(8) <= '0';
    zext_ln1541_8_reg_1806(8) <= '0';
    zext_ln1541_10_reg_1812(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    P0Buf_V_10_fu_915_p3 <= 
        ap_phi_mux_P1Buf_V_9_phi_fu_536_p6 when (icmp_ln1065_reg_1659_pp0_iter1_reg(0) = '1') else 
        ap_phi_mux_P0Buf_V_6_phi_fu_522_p6;
    P0Buf_V_11_fu_1047_p3 <= 
        ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558 when (icmp_ln1065_reg_1659_pp0_iter2_reg(0) = '1') else 
        ap_phi_reg_pp0_iter3_P0Buf_V_7_reg_547;
    P4_V_1_fu_1338_p3 <= (tmp_6_reg_1801_pp0_iter6_reg & ap_const_lv10_0);
    P4_V_2_fu_1408_p3 <= (tmp_11_reg_1822_pp0_iter6_reg & ap_const_lv10_0);
    P4_V_fu_1268_p3 <= (trunc_ln674_reg_1757_pp0_iter6_reg & ap_const_lv10_0);
    Wx_V_fu_901_p4 <= ret_V_6_fu_838_p2(23 downto 12);
    Wxy_V_fu_1228_p1 <= grp_fu_1497_p2;
    Wxy_V_fu_1228_p4 <= Wxy_V_fu_1228_p1(21 downto 10);
    Wy_V_fu_887_p4 <= ret_V_fu_747_p2(23 downto 12);
    add_ln394_fu_622_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv31_1));
    and_ln411_fu_679_p2 <= (icmp_ln413_fu_673_p2 and icmp_ln1077_1);
    and_ln491_fu_713_p2 <= (icmp_ln494_fu_701_p2 and icmp_ln1065_1_fu_707_p2);
    and_ln492_fu_695_p2 <= (icmp_ln1065_fu_689_p2 and cmp357);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, rgb_mat_data83_empty_n, ap_predicate_op95_read_state2, resize_out_mat_data84_full_n, ap_predicate_op319_write_state8)
    begin
                ap_block_pp0_stage0_01001 <= (((resize_out_mat_data84_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_predicate_op319_write_state8 = ap_const_boolean_1)) or ((ap_predicate_op95_read_state2 = ap_const_boolean_1) and (rgb_mat_data83_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, rgb_mat_data83_empty_n, ap_predicate_op95_read_state2, resize_out_mat_data84_full_n, ap_predicate_op319_write_state8)
    begin
                ap_block_pp0_stage0_11001 <= (((resize_out_mat_data84_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_predicate_op319_write_state8 = ap_const_boolean_1)) or ((ap_predicate_op95_read_state2 = ap_const_boolean_1) and (rgb_mat_data83_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, rgb_mat_data83_empty_n, ap_predicate_op95_read_state2, resize_out_mat_data84_full_n, ap_predicate_op319_write_state8)
    begin
                ap_block_pp0_stage0_subdone <= (((resize_out_mat_data84_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_predicate_op319_write_state8 = ap_const_boolean_1)) or ((ap_predicate_op95_read_state2 = ap_const_boolean_1) and (rgb_mat_data83_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(rgb_mat_data83_empty_n, ap_predicate_op95_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op95_read_state2 = ap_const_boolean_1) and (rgb_mat_data83_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter7_assign_proc : process(resize_out_mat_data84_full_n, ap_predicate_op319_write_state8)
    begin
                ap_block_state8_pp0_stage0_iter7 <= ((resize_out_mat_data84_full_n = ap_const_logic_0) and (ap_predicate_op319_write_state8 = ap_const_boolean_1));
    end process;


    ap_condition_1517_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln394_reg_1635, ap_block_pp0_stage0)
    begin
                ap_condition_1517 <= ((icmp_ln394_reg_1635 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1523_assign_proc : process(first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659)
    begin
                ap_condition_1523 <= (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (icmp_ln1065_reg_1659 = ap_const_lv1_0));
    end process;


    ap_condition_229_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_229 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_272_assign_proc : process(icmp_ln394_reg_1635_pp0_iter1_reg, first_row_index_4_read_reg_1617)
    begin
                ap_condition_272 <= (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (icmp_ln394_reg_1635_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_condition_387_assign_proc : process(icmp_ln394_reg_1635, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659)
    begin
                ap_condition_387 <= ((icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1));
    end process;


    ap_condition_399_assign_proc : process(icmp_ln394_reg_1635, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659)
    begin
                ap_condition_399 <= ((icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0));
    end process;


    ap_condition_411_assign_proc : process(icmp_ln394_reg_1635, first_row_index_4_read_reg_1617)
    begin
                ap_condition_411 <= (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (icmp_ln394_reg_1635 = ap_const_lv1_1));
    end process;


    ap_condition_412_assign_proc : process(icmp_ln394_reg_1635, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659)
    begin
                ap_condition_412 <= (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0));
    end process;


    ap_condition_633_assign_proc : process(first_row_index_4_read_reg_1617, ap_phi_mux_flag_write_phi_fu_508_p6)
    begin
                ap_condition_633 <= (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln394_fu_616_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_616_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_P0Buf_V_6_phi_fu_522_p6_assign_proc : process(line_buffer_V_q1, line_buffer_V_1_q1, line_buffer_V_2_q1, icmp_ln394_reg_1635_pp0_iter1_reg, first_row_index_4_read_reg_1617, ap_phi_reg_pp0_iter2_P0Buf_V_6_reg_519)
    begin
        if ((icmp_ln394_reg_1635_pp0_iter1_reg = ap_const_lv1_1)) then
            if ((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) then 
                ap_phi_mux_P0Buf_V_6_phi_fu_522_p6 <= line_buffer_V_1_q1;
            elsif ((not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)))) then 
                ap_phi_mux_P0Buf_V_6_phi_fu_522_p6 <= line_buffer_V_2_q1;
            elsif ((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) then 
                ap_phi_mux_P0Buf_V_6_phi_fu_522_p6 <= line_buffer_V_q1;
            else 
                ap_phi_mux_P0Buf_V_6_phi_fu_522_p6 <= ap_phi_reg_pp0_iter2_P0Buf_V_6_reg_519;
            end if;
        else 
            ap_phi_mux_P0Buf_V_6_phi_fu_522_p6 <= ap_phi_reg_pp0_iter2_P0Buf_V_6_reg_519;
        end if; 
    end process;


    ap_phi_mux_P1Buf_V_9_phi_fu_536_p6_assign_proc : process(line_buffer_V_q1, line_buffer_V_1_q1, line_buffer_V_2_q1, icmp_ln394_reg_1635_pp0_iter1_reg, first_row_index_4_read_reg_1617, ap_phi_reg_pp0_iter2_P1Buf_V_9_reg_533)
    begin
        if ((icmp_ln394_reg_1635_pp0_iter1_reg = ap_const_lv1_1)) then
            if ((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) then 
                ap_phi_mux_P1Buf_V_9_phi_fu_536_p6 <= line_buffer_V_2_q1;
            elsif ((not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)))) then 
                ap_phi_mux_P1Buf_V_9_phi_fu_536_p6 <= line_buffer_V_q1;
            elsif ((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) then 
                ap_phi_mux_P1Buf_V_9_phi_fu_536_p6 <= line_buffer_V_1_q1;
            else 
                ap_phi_mux_P1Buf_V_9_phi_fu_536_p6 <= ap_phi_reg_pp0_iter2_P1Buf_V_9_reg_533;
            end if;
        else 
            ap_phi_mux_P1Buf_V_9_phi_fu_536_p6 <= ap_phi_reg_pp0_iter2_P1Buf_V_9_reg_533;
        end if; 
    end process;


    ap_phi_mux_flag_write_phi_fu_508_p6_assign_proc : process(icmp_ln394_reg_1635, and_ln411_reg_1655, cmp120, ap_phi_reg_pp0_iter1_flag_write_reg_504)
    begin
        if (((cmp120 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln411_reg_1655) and (icmp_ln394_reg_1635 = ap_const_lv1_1))) then 
            ap_phi_mux_flag_write_phi_fu_508_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_flag_write_phi_fu_508_p6 <= ap_phi_reg_pp0_iter1_flag_write_reg_504;
        end if; 
    end process;


    ap_phi_mux_read_pixel_1_phi_fu_490_p6_assign_proc : process(rgb_mat_data83_dout, icmp_ln394_reg_1635, and_ln411_reg_1655, cmp120, ap_phi_reg_pp0_iter1_read_pixel_1_reg_486)
    begin
        if (((cmp120 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln411_reg_1655) and (icmp_ln394_reg_1635 = ap_const_lv1_1))) then 
            ap_phi_mux_read_pixel_1_phi_fu_490_p6 <= rgb_mat_data83_dout;
        else 
            ap_phi_mux_read_pixel_1_phi_fu_490_p6 <= ap_phi_reg_pp0_iter1_read_pixel_1_reg_486;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_P0Buf_V_7_reg_547 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_P1Buf_V_8_reg_558 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_flag_write_reg_504 <= "X";
    ap_phi_reg_pp0_iter1_read_pixel_1_reg_486 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_P0Buf_V_6_reg_519 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_P1Buf_V_9_reg_533 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op319_write_state8_assign_proc : process(and_ln492_reg_1665_pp0_iter6_reg, icmp_ln494_reg_1669_pp0_iter6_reg, and_ln491_reg_1673_pp0_iter6_reg, cmp352)
    begin
                ap_predicate_op319_write_state8 <= (((ap_const_lv1_0 = and_ln492_reg_1665_pp0_iter6_reg) and (cmp352 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln491_reg_1673_pp0_iter6_reg)) or ((icmp_ln494_reg_1669_pp0_iter6_reg = ap_const_lv1_1) and (cmp352 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln492_reg_1665_pp0_iter6_reg)));
    end process;


    ap_predicate_op95_read_state2_assign_proc : process(icmp_ln394_reg_1635, and_ln411_reg_1655, cmp120)
    begin
                ap_predicate_op95_read_state2 <= ((cmp120 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln411_reg_1655) and (icmp_ln394_reg_1635 = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_176)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_j_1 <= ap_const_lv31_0;
        else 
            ap_sig_allocacmp_j_1 <= j_fu_176;
        end if; 
    end process;

    cmp120_read_read_fu_216_p2 <= cmp120;
    cmp352_read_read_fu_282_p2 <= cmp352;
    empty_fu_848_p1 <= idx_2_fu_814_p3(12 - 1 downto 0);
    first_row_index_4_read_reg_1617 <= first_row_index_4;

    grp_fu_1497_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1497_ce <= ap_const_logic_1;
        else 
            grp_fu_1497_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1497_p0 <= grp_fu_1497_p00(12 - 1 downto 0);
    grp_fu_1497_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_V_fu_901_p4),24));
    grp_fu_1497_p1 <= grp_fu_1497_p10(12 - 1 downto 0);
    grp_fu_1497_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_V_fu_887_p4),24));

    grp_fu_1504_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1504_ce <= ap_const_logic_1;
        else 
            grp_fu_1504_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1504_p0 <= zext_ln1319_fu_948_p1(12 - 1 downto 0);

    grp_fu_1511_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1511_ce <= ap_const_logic_1;
        else 
            grp_fu_1511_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1511_p0 <= zext_ln1319_fu_948_p1(12 - 1 downto 0);

    grp_fu_1518_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1518_ce <= ap_const_logic_1;
        else 
            grp_fu_1518_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1518_p0 <= zext_ln1319_fu_948_p1(12 - 1 downto 0);

    grp_fu_1525_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1525_ce <= ap_const_logic_1;
        else 
            grp_fu_1525_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1525_p0 <= zext_ln1319_1_fu_1103_p1(12 - 1 downto 0);

    grp_fu_1534_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1534_ce <= ap_const_logic_1;
        else 
            grp_fu_1534_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1534_p0 <= zext_ln1319_1_fu_1103_p1(12 - 1 downto 0);

    grp_fu_1543_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1543_ce <= ap_const_logic_1;
        else 
            grp_fu_1543_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1543_p0 <= zext_ln1319_1_fu_1103_p1(12 - 1 downto 0);

    grp_fu_1552_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1552_ce <= ap_const_logic_1;
        else 
            grp_fu_1552_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1552_p0 <= zext_ln864_1_fu_1237_p1(12 - 1 downto 0);

    grp_fu_1561_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1561_ce <= ap_const_logic_1;
        else 
            grp_fu_1561_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1561_p0 <= zext_ln864_1_fu_1237_p1(12 - 1 downto 0);

    grp_fu_1570_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1570_ce <= ap_const_logic_1;
        else 
            grp_fu_1570_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1570_p0 <= zext_ln864_1_fu_1237_p1(12 - 1 downto 0);
    icmp_ln1049_1_fu_794_p2 <= "1" when (trunc_ln1049_fu_790_p1 = ap_const_lv22_0) else "0";
    icmp_ln1049_2_fu_1310_p2 <= "1" when (trunc_ln1049_1_fu_1306_p1 = ap_const_lv10_0) else "0";
    icmp_ln1049_3_fu_1380_p2 <= "1" when (trunc_ln1049_2_fu_1376_p1 = ap_const_lv10_0) else "0";
    icmp_ln1049_4_fu_1450_p2 <= "1" when (trunc_ln1049_3_fu_1446_p1 = ap_const_lv10_0) else "0";
    icmp_ln1049_fu_637_p2 <= "0" when (indexy_pre_V = ap_const_lv22_0) else "1";
    icmp_ln1065_1_fu_707_p2 <= "1" when (zext_ln1065_fu_685_p1 = op2_assign_2) else "0";
    icmp_ln1065_fu_689_p2 <= "1" when (op2_assign = zext_ln1065_fu_685_p1) else "0";
    icmp_ln1695_fu_667_p2 <= "1" when (signed(sext_ln1696_fu_663_p1) > signed(shl_i_i_i_i_i)) else "0";
    icmp_ln394_fu_616_p2 <= "1" when (signed(zext_ln394_1_fu_612_p1) < signed(loop_col_count)) else "0";
    icmp_ln413_fu_673_p2 <= "1" when (signed(zext_ln394_1_fu_612_p1) < signed(p_read1)) else "0";
    icmp_ln494_fu_701_p2 <= "1" when (signed(zext_ln394_1_fu_612_p1) < signed(p_read3)) else "0";
    idx_2_fu_814_p3 <= 
        select_ln1048_1_fu_806_p3 when (p_Result_1_fu_782_p3(0) = '1') else 
        trunc_ln_fu_772_p4;
    idx_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_2_fu_814_p3),32));
    idx_nxt_fu_861_p2 <= std_logic_vector(unsigned(empty_fu_848_p1) + unsigned(zext_ln433_fu_857_p1));
    indexx_pre_V_3_fu_759_p3 <= 
        indexx_pre_V_1 when (icmp_ln1695_reg_1650(0) = '1') else 
        indexx_pre_comp_V_reg_1639;
    indexx_pre_V_fu_764_p3 <= 
        ap_const_lv42_0 when (tmp_2_fu_752_p3(0) = '1') else 
        indexx_pre_V_3_fu_759_p3;
    indexy_V_1_out <= tmp_fu_172;

    indexy_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln394_reg_1635_pp0_iter5_reg)
    begin
        if (((icmp_ln394_reg_1635_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            indexy_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            indexy_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    indexy_pre_comp_V_scaleCompute_17_42_20_48_16_1_s_fu_191_p_din1 <= zext_ln400_fu_632_p1;
    indexy_pre_comp_V_scaleCompute_17_42_20_48_16_1_s_fu_191_p_din2 <= trunc_ln3;
    line_buffer_V_1_addr_1_gep_fu_430_p3 <= zext_ln436_fu_877_p1(12 - 1 downto 0);
    line_buffer_V_1_addr_gep_fu_422_p3 <= zext_ln435_fu_867_p1(12 - 1 downto 0);

    line_buffer_V_1_address0_assign_proc : process(icmp_ln394_reg_1635, first_row_index_4_read_reg_1617, line_buffer_V_1_addr_1_gep_fu_430_p3, zext_ln436_fu_877_p1, zext_ln394_fu_734_p1, ap_condition_387, ap_condition_633, ap_condition_229)
    begin
        if ((ap_const_boolean_1 = ap_condition_229)) then
            if ((ap_const_boolean_1 = ap_condition_633)) then 
                line_buffer_V_1_address0 <= zext_ln394_fu_734_p1(12 - 1 downto 0);
            elsif (((icmp_ln394_reg_1635 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0))) then 
                line_buffer_V_1_address0 <= line_buffer_V_1_addr_1_gep_fu_430_p3;
            elsif ((ap_const_boolean_1 = ap_condition_387)) then 
                line_buffer_V_1_address0 <= zext_ln436_fu_877_p1(12 - 1 downto 0);
            else 
                line_buffer_V_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_address1_assign_proc : process(first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659, line_buffer_V_1_addr_gep_fu_422_p3, zext_ln435_fu_867_p1, ap_condition_1517)
    begin
        if ((ap_const_boolean_1 = ap_condition_1517)) then
            if ((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) then 
                line_buffer_V_1_address1 <= line_buffer_V_1_addr_gep_fu_422_p3;
            elsif (((icmp_ln1065_reg_1659 = ap_const_lv1_0) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1))) then 
                line_buffer_V_1_address1 <= zext_ln435_fu_867_p1(12 - 1 downto 0);
            else 
                line_buffer_V_1_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln394_reg_1635, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659, ap_phi_mux_flag_write_phi_fu_508_p6)
    begin
        if ((((icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln394_reg_1635 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln394_reg_1635, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659)
    begin
        if ((((icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln394_reg_1635 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_d0 <= ap_phi_mux_read_pixel_1_phi_fu_490_p6;

    line_buffer_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, ap_phi_mux_flag_write_phi_fu_508_p6)
    begin
        if ((not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_addr_1_gep_fu_454_p3 <= zext_ln436_fu_877_p1(12 - 1 downto 0);
    line_buffer_V_2_addr_gep_fu_446_p3 <= zext_ln435_fu_867_p1(12 - 1 downto 0);

    line_buffer_V_2_address0_assign_proc : process(icmp_ln394_reg_1635, first_row_index_4_read_reg_1617, line_buffer_V_2_addr_1_gep_fu_454_p3, ap_phi_mux_flag_write_phi_fu_508_p6, zext_ln436_fu_877_p1, zext_ln394_fu_734_p1, ap_condition_229, ap_condition_412)
    begin
        if ((ap_const_boolean_1 = ap_condition_229)) then
            if ((ap_const_boolean_1 = ap_condition_412)) then 
                line_buffer_V_2_address0 <= line_buffer_V_2_addr_1_gep_fu_454_p3;
            elsif (((ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0))) then 
                line_buffer_V_2_address0 <= zext_ln394_fu_734_p1(12 - 1 downto 0);
            elsif (((icmp_ln394_reg_1635 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1))) then 
                line_buffer_V_2_address0 <= zext_ln436_fu_877_p1(12 - 1 downto 0);
            else 
                line_buffer_V_2_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_address1_assign_proc : process(first_row_index_4_read_reg_1617, line_buffer_V_2_addr_gep_fu_446_p3, zext_ln435_fu_867_p1, ap_condition_1517, ap_condition_1523)
    begin
        if ((ap_const_boolean_1 = ap_condition_1517)) then
            if ((ap_const_boolean_1 = ap_condition_1523)) then 
                line_buffer_V_2_address1 <= line_buffer_V_2_addr_gep_fu_446_p3;
            elsif ((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) then 
                line_buffer_V_2_address1 <= zext_ln435_fu_867_p1(12 - 1 downto 0);
            else 
                line_buffer_V_2_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln394_reg_1635, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659, ap_phi_mux_flag_write_phi_fu_508_p6)
    begin
        if ((((ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln394_reg_1635 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln394_reg_1635, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659)
    begin
        if ((((icmp_ln394_reg_1635 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_2_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_d0 <= ap_phi_mux_read_pixel_1_phi_fu_490_p6;

    line_buffer_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, ap_phi_mux_flag_write_phi_fu_508_p6)
    begin
        if (((ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_addr_1_gep_fu_470_p3 <= zext_ln436_fu_877_p1(12 - 1 downto 0);
    line_buffer_V_addr_gep_fu_462_p3 <= zext_ln435_fu_867_p1(12 - 1 downto 0);

    line_buffer_V_address0_assign_proc : process(first_row_index_4_read_reg_1617, line_buffer_V_addr_1_gep_fu_470_p3, ap_phi_mux_flag_write_phi_fu_508_p6, zext_ln436_fu_877_p1, zext_ln394_fu_734_p1, ap_condition_229, ap_condition_399, ap_condition_411)
    begin
        if ((ap_const_boolean_1 = ap_condition_229)) then
            if ((ap_const_boolean_1 = ap_condition_411)) then 
                line_buffer_V_address0 <= line_buffer_V_addr_1_gep_fu_470_p3;
            elsif ((ap_const_boolean_1 = ap_condition_399)) then 
                line_buffer_V_address0 <= zext_ln436_fu_877_p1(12 - 1 downto 0);
            elsif (((ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1))) then 
                line_buffer_V_address0 <= zext_ln394_fu_734_p1(12 - 1 downto 0);
            else 
                line_buffer_V_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_address1_assign_proc : process(first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659, line_buffer_V_addr_gep_fu_462_p3, zext_ln435_fu_867_p1, ap_condition_1517)
    begin
        if ((ap_const_boolean_1 = ap_condition_1517)) then
            if ((not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)))) then 
                line_buffer_V_address1 <= line_buffer_V_addr_gep_fu_462_p3;
            elsif (((icmp_ln1065_reg_1659 = ap_const_lv1_0) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0))) then 
                line_buffer_V_address1 <= zext_ln435_fu_867_p1(12 - 1 downto 0);
            else 
                line_buffer_V_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln394_reg_1635, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659, ap_phi_mux_flag_write_phi_fu_508_p6)
    begin
        if ((((ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (icmp_ln394_reg_1635 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln394_reg_1635, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, icmp_ln1065_reg_1659)
    begin
        if ((((icmp_ln394_reg_1635 = ap_const_lv1_1) and (icmp_ln1065_reg_1659 = ap_const_lv1_0) and (first_row_index_4_read_reg_1617 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_4_read_reg_1617 = ap_const_lv32_0)) and not((first_row_index_4_read_reg_1617 = ap_const_lv32_1)) and (icmp_ln394_reg_1635 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_d0 <= ap_phi_mux_read_pixel_1_phi_fu_490_p6;

    line_buffer_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, first_row_index_4_read_reg_1617, ap_phi_mux_flag_write_phi_fu_508_p6)
    begin
        if (((ap_phi_mux_flag_write_phi_fu_508_p6 = ap_const_lv1_1) and (first_row_index_4_read_reg_1617 = ap_const_lv32_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    nextYScale_V_1_out <= nextYScale_V_1_fu_168;

    nextYScale_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln394_reg_1635_pp0_iter5_reg)
    begin
        if (((icmp_ln394_reg_1635_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            nextYScale_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            nextYScale_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    not_cmp_i_i176_fu_852_p2 <= "0" when (idx_fu_844_p1 = tmp_V) else "1";
    p_Result_1_fu_782_p3 <= indexx_pre_V_fu_764_p3(41 downto 41);
    p_Result_6_fu_1298_p3 <= ret_V_8_fu_1282_p2(23 downto 23);
    p_Result_7_fu_1368_p3 <= ret_V_12_fu_1352_p2(23 downto 23);
    p_Result_8_fu_1438_p3 <= ret_V_16_fu_1422_p2(23 downto 23);
    p_Result_read_read_fu_240_p2 <= (0=>p_Result_s, others=>'-');

    resize_out_mat_data84_blk_n_assign_proc : process(ap_enable_reg_pp0_iter7, resize_out_mat_data84_full_n, ap_predicate_op319_write_state8, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op319_write_state8 = ap_const_boolean_1))) then 
            resize_out_mat_data84_blk_n <= resize_out_mat_data84_full_n;
        else 
            resize_out_mat_data84_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    resize_out_mat_data84_din <= ((ret_V_18_fu_1470_p3 & ret_V_14_fu_1400_p3) & ret_V_10_fu_1330_p3);

    resize_out_mat_data84_write_assign_proc : process(ap_enable_reg_pp0_iter7, ap_predicate_op319_write_state8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op319_write_state8 = ap_const_boolean_1))) then 
            resize_out_mat_data84_write <= ap_const_logic_1;
        else 
            resize_out_mat_data84_write <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_10_fu_1330_p3 <= 
        select_ln1048_3_fu_1322_p3 when (p_Result_6_fu_1298_p3(0) = '1') else 
        trunc_ln1029_1_fu_1288_p4;
    ret_V_12_fu_1352_p2 <= std_logic_vector(signed(sext_ln1393_4_fu_1345_p1) + signed(zext_ln1393_1_fu_1348_p1));
    ret_V_13_fu_1386_p2 <= std_logic_vector(unsigned(trunc_ln1029_2_fu_1358_p4) + unsigned(ap_const_lv8_1));
    ret_V_14_fu_1400_p3 <= 
        select_ln1048_4_fu_1392_p3 when (p_Result_7_fu_1368_p3(0) = '1') else 
        trunc_ln1029_2_fu_1358_p4;
    ret_V_16_fu_1422_p2 <= std_logic_vector(signed(sext_ln1393_7_fu_1415_p1) + signed(zext_ln1393_2_fu_1418_p1));
    ret_V_17_fu_1456_p2 <= std_logic_vector(unsigned(trunc_ln1029_3_fu_1428_p4) + unsigned(ap_const_lv8_1));
    ret_V_18_fu_1470_p3 <= 
        select_ln1048_5_fu_1462_p3 when (p_Result_8_fu_1438_p3(0) = '1') else 
        trunc_ln1029_3_fu_1428_p4;
    ret_V_19_fu_651_p0 <= (0=>p_Result_s, others=>'-');
    ret_V_19_fu_651_p3 <= 
        select_ln1048_fu_643_p3 when (ret_V_19_fu_651_p0(0) = '1') else 
        ret_V_17_cast;
    ret_V_4_fu_800_p2 <= std_logic_vector(unsigned(trunc_ln_fu_772_p4) + unsigned(ap_const_lv17_1));
    ret_V_6_fu_838_p2 <= std_logic_vector(unsigned(trunc_ln859_fu_834_p1) - unsigned(rhs_1_fu_826_p3));
    ret_V_8_fu_1282_p2 <= std_logic_vector(signed(sext_ln1393_1_fu_1275_p1) + signed(zext_ln1393_fu_1278_p1));
    ret_V_9_fu_1316_p2 <= std_logic_vector(unsigned(trunc_ln1029_1_fu_1288_p4) + unsigned(ap_const_lv8_1));
    ret_V_fu_747_p2 <= std_logic_vector(unsigned(indexy_pre_V_cast) - unsigned(rhs_fu_740_p3));

    rgb_mat_data83_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rgb_mat_data83_empty_n, ap_predicate_op95_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op95_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rgb_mat_data83_blk_n <= rgb_mat_data83_empty_n;
        else 
            rgb_mat_data83_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rgb_mat_data83_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op95_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op95_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rgb_mat_data83_read <= ap_const_logic_1;
        else 
            rgb_mat_data83_read <= ap_const_logic_0;
        end if; 
    end process;

    rhs_1_fu_826_p3 <= (trunc_ln884_1_fu_822_p1 & ap_const_lv22_0);
    rhs_fu_740_p3 <= (trunc_ln884_reg_1645 & ap_const_lv22_0);
    select_ln1048_1_fu_806_p3 <= 
        trunc_ln_fu_772_p4 when (icmp_ln1049_1_fu_794_p2(0) = '1') else 
        ret_V_4_fu_800_p2;
    select_ln1048_3_fu_1322_p3 <= 
        trunc_ln1029_1_fu_1288_p4 when (icmp_ln1049_2_fu_1310_p2(0) = '1') else 
        ret_V_9_fu_1316_p2;
    select_ln1048_4_fu_1392_p3 <= 
        trunc_ln1029_2_fu_1358_p4 when (icmp_ln1049_3_fu_1380_p2(0) = '1') else 
        ret_V_13_fu_1386_p2;
    select_ln1048_5_fu_1462_p3 <= 
        trunc_ln1029_3_fu_1428_p4 when (icmp_ln1049_4_fu_1450_p2(0) = '1') else 
        ret_V_17_fu_1456_p2;
    select_ln1048_fu_643_p3 <= 
        add_i_i_i_i_i368_i when (icmp_ln1049_fu_637_p2(0) = '1') else 
        ret_V_17_cast;
        sext_ln1393_1_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1552_p3),24));

        sext_ln1393_4_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1561_p3),24));

        sext_ln1393_7_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1570_p3),24));

    sext_ln1696_fu_663_p0 <= indexy_pre_comp_V_scaleCompute_17_42_20_48_16_1_s_fu_191_p_dout0;
        sext_ln1696_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1696_fu_663_p0),54));

        sext_ln75_1_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln75_4_fu_1138_p2),10));

        sext_ln75_2_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln75_8_fu_1199_p2),10));

        sext_ln75_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln75_fu_1074_p2),10));

    sub_ln75_1_fu_1082_p2 <= std_logic_vector(signed(sext_ln75_fu_1078_p1) - signed(zext_ln1541_3_fu_1066_p1));
    sub_ln75_4_fu_1138_p2 <= std_logic_vector(unsigned(zext_ln1541_4_reg_1785) - unsigned(zext_ln1541_6_reg_1791));
    sub_ln75_5_fu_1146_p2 <= std_logic_vector(signed(sext_ln75_1_fu_1142_p1) - signed(zext_ln1541_7_fu_1130_p1));
    sub_ln75_8_fu_1199_p2 <= std_logic_vector(unsigned(zext_ln1541_8_reg_1806) - unsigned(zext_ln1541_10_reg_1812));
    sub_ln75_9_fu_1207_p2 <= std_logic_vector(signed(sext_ln75_2_fu_1203_p1) - signed(zext_ln1541_11_fu_1191_p1));
    sub_ln75_fu_1074_p2 <= std_logic_vector(unsigned(zext_ln1541_reg_1762) - unsigned(zext_ln1541_2_reg_1768));
    tmp_10_fu_1177_p4 <= ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558(23 downto 16);
    tmp_2_fu_752_p3 <= indexx_pre_comp_V_reg_1639(41 downto 41);
    tmp_3_fu_961_p4 <= ap_phi_mux_P1Buf_V_9_phi_fu_536_p6(15 downto 8);
    tmp_4_fu_1106_p4 <= P0Buf_V_11_fu_1047_p3(15 downto 8);
    tmp_5_fu_1116_p4 <= ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558(15 downto 8);
    tmp_7_fu_999_p4 <= P0Buf_V_10_fu_915_p3(23 downto 16);
    tmp_8_fu_1009_p4 <= ap_phi_mux_P1Buf_V_9_phi_fu_536_p6(23 downto 16);
    tmp_9_fu_1167_p4 <= P0Buf_V_11_fu_1047_p3(23 downto 16);
    tmp_s_fu_951_p4 <= P0Buf_V_10_fu_915_p3(15 downto 8);
    trunc_ln1029_1_fu_1288_p4 <= ret_V_8_fu_1282_p2(17 downto 10);
    trunc_ln1029_2_fu_1358_p4 <= ret_V_12_fu_1352_p2(17 downto 10);
    trunc_ln1029_3_fu_1428_p4 <= ret_V_16_fu_1422_p2(17 downto 10);
    trunc_ln1049_1_fu_1306_p1 <= ret_V_8_fu_1282_p2(10 - 1 downto 0);
    trunc_ln1049_2_fu_1376_p1 <= ret_V_12_fu_1352_p2(10 - 1 downto 0);
    trunc_ln1049_3_fu_1446_p1 <= ret_V_16_fu_1422_p2(10 - 1 downto 0);
    trunc_ln1049_fu_790_p1 <= indexx_pre_V_fu_764_p3(22 - 1 downto 0);
    trunc_ln400_fu_628_p1 <= ap_sig_allocacmp_j_1(20 - 1 downto 0);
    trunc_ln674_1_fu_926_p1 <= ap_phi_mux_P1Buf_V_9_phi_fu_536_p6(8 - 1 downto 0);
    trunc_ln674_2_fu_1054_p1 <= P0Buf_V_11_fu_1047_p3(8 - 1 downto 0);
    trunc_ln674_3_fu_1058_p1 <= ap_phi_reg_pp0_iter3_P1Buf_V_8_reg_558(8 - 1 downto 0);
    trunc_ln674_fu_922_p1 <= P0Buf_V_10_fu_915_p3(8 - 1 downto 0);
    trunc_ln859_fu_834_p1 <= indexx_pre_V_fu_764_p3(24 - 1 downto 0);
    trunc_ln884_1_fu_822_p1 <= idx_2_fu_814_p3(2 - 1 downto 0);
    trunc_ln884_fu_659_p1 <= ret_V_19_fu_651_p3(2 - 1 downto 0);
    trunc_ln_fu_772_p4 <= indexx_pre_V_fu_764_p3(38 downto 22);
    val0_V_1_fu_1152_p2 <= std_logic_vector(unsigned(sub_ln75_5_fu_1146_p2) + unsigned(zext_ln1541_5_fu_1126_p1));
    val0_V_2_fu_1213_p2 <= std_logic_vector(unsigned(sub_ln75_9_fu_1207_p2) + unsigned(zext_ln1541_9_fu_1187_p1));
    val0_V_fu_1088_p2 <= std_logic_vector(unsigned(sub_ln75_1_fu_1082_p2) + unsigned(zext_ln1541_1_fu_1062_p1));
    val1_V_1_fu_979_p2 <= std_logic_vector(unsigned(zext_ln1541_6_fu_975_p1) - unsigned(zext_ln1541_4_fu_971_p1));
    val1_V_2_fu_1027_p2 <= std_logic_vector(unsigned(zext_ln1541_10_fu_1023_p1) - unsigned(zext_ln1541_8_fu_1019_p1));
    val1_V_fu_938_p2 <= std_logic_vector(unsigned(zext_ln1541_2_fu_934_p1) - unsigned(zext_ln1541_fu_930_p1));
    val2_V_1_fu_1158_p2 <= std_logic_vector(unsigned(zext_ln75_1_fu_1134_p1) - unsigned(zext_ln1541_4_reg_1785));
    val2_V_2_fu_1219_p2 <= std_logic_vector(unsigned(zext_ln75_2_fu_1195_p1) - unsigned(zext_ln1541_8_reg_1806));
    val2_V_fu_1094_p2 <= std_logic_vector(unsigned(zext_ln75_fu_1070_p1) - unsigned(zext_ln1541_reg_1762));
    zext_ln1065_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_19_fu_651_p3),32));
    zext_ln1319_1_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_V_reg_1747_pp0_iter2_reg),21));
    zext_ln1319_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_V_reg_1737),21));
    zext_ln1393_1_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_1_fu_1338_p3),24));
    zext_ln1393_2_fu_1418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_2_fu_1408_p3),24));
    zext_ln1393_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_fu_1268_p3),24));
    zext_ln1541_10_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1009_p4),9));
    zext_ln1541_11_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1167_p4),10));
    zext_ln1541_1_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_3_fu_1058_p1),10));
    zext_ln1541_2_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_1_fu_926_p1),9));
    zext_ln1541_3_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_2_fu_1054_p1),10));
    zext_ln1541_4_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_951_p4),9));
    zext_ln1541_5_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1116_p4),10));
    zext_ln1541_6_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_961_p4),9));
    zext_ln1541_7_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1106_p4),10));
    zext_ln1541_8_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_999_p4),9));
    zext_ln1541_9_fu_1187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1177_p4),10));
    zext_ln1541_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_fu_922_p1),9));
    zext_ln394_1_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_1),32));
    zext_ln394_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_1630),64));
    zext_ln400_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln400_fu_628_p1),32));
    zext_ln433_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_cmp_i_i176_fu_852_p2),12));
    zext_ln435_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_2_fu_814_p3),64));
    zext_ln436_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_nxt_fu_861_p2),64));
    zext_ln75_1_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1106_p4),9));
    zext_ln75_2_fu_1195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1167_p4),9));
    zext_ln75_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_2_fu_1054_p1),9));
    zext_ln864_1_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wxy_V_fu_1228_p4),22));
end behav;
