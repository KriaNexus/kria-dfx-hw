// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pp_pipeline_accel_AxiStream2MatStream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_empty_n,
        ldata1_read,
        imgInput_uv_467_din,
        imgInput_uv_467_full_n,
        imgInput_uv_467_write,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_bound_per_npc_dout,
        cols_bound_per_npc_empty_n,
        cols_bound_per_npc_read,
        last_blk_width_dout,
        last_blk_width_empty_n,
        last_blk_width_read,
        stride_dout,
        stride_empty_n,
        stride_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state10 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] ldata1_dout;
input   ldata1_empty_n;
output   ldata1_read;
output  [15:0] imgInput_uv_467_din;
input   imgInput_uv_467_full_n;
output   imgInput_uv_467_write;
input  [10:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [10:0] cols_bound_per_npc_dout;
input   cols_bound_per_npc_empty_n;
output   cols_bound_per_npc_read;
input  [4:0] last_blk_width_dout;
input   last_blk_width_empty_n;
output   last_blk_width_read;
input  [31:0] stride_dout;
input   stride_empty_n;
output   stride_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ldata1_read;
reg imgInput_uv_467_write;
reg rows_read;
reg cols_bound_per_npc_read;
reg last_blk_width_read;
reg stride_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ldata1_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1073_reg_893;
reg   [0:0] icmp_ln1073_reg_893_pp0_iter1_reg;
reg   [0:0] icmp_ln1084_reg_918;
reg    imgInput_uv_467_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln1104_reg_909;
reg   [0:0] icmp_ln1104_reg_909_pp0_iter3_reg;
reg    rows_blk_n;
reg    cols_bound_per_npc_blk_n;
reg    last_blk_width_blk_n;
reg    stride_blk_n;
reg   [31:0] j_reg_151;
reg   [30:0] i_reg_162;
reg   [10:0] rows_3_reg_814;
reg   [10:0] cols_bound_per_npc_3_reg_819;
reg   [4:0] last_blk_width_2_reg_825;
reg   [31:0] stride_3_reg_831;
wire   [31:0] cols_bound_per_npc_cast2_i_fu_202_p1;
reg   [31:0] cols_bound_per_npc_cast2_i_reg_837;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1056_fu_205_p2;
reg   [0:0] icmp_ln1056_reg_842;
wire  signed [31:0] stride_bound_per_npc_fu_210_p3;
reg  signed [31:0] stride_bound_per_npc_reg_847;
wire    ap_CS_fsm_state3;
wire   [4:0] strideBased_last_blk_width_fu_228_p3;
reg   [4:0] strideBased_last_blk_width_reg_858;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_220_p2;
reg   [31:0] bound_reg_863;
wire   [31:0] sub_i_fu_238_p2;
reg   [31:0] sub_i_reg_868;
wire   [6:0] sub4_i_fu_243_p2;
reg   [6:0] sub4_i_reg_873;
wire  signed [31:0] sub26_cast_i_fu_255_p1;
reg  signed [31:0] sub26_cast_i_reg_878;
wire   [6:0] add_ln1093_fu_259_p2;
reg   [6:0] add_ln1093_reg_883;
wire   [30:0] add_ln1073_fu_265_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_predicate_op113_read_state7;
reg    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
reg    ap_block_state9_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1073_fu_275_p2;
reg   [0:0] icmp_ln1073_reg_893_pp0_iter2_reg;
wire   [0:0] bLast_fu_280_p2;
reg   [0:0] bLast_reg_897;
wire   [0:0] bLast_width_fu_285_p2;
reg   [0:0] bLast_width_reg_904;
reg   [0:0] bLast_width_reg_904_pp0_iter1_reg;
reg   [0:0] bLast_width_reg_904_pp0_iter2_reg;
reg   [0:0] bLast_width_reg_904_pp0_iter3_reg;
wire   [0:0] icmp_ln1104_fu_290_p2;
reg   [0:0] icmp_ln1104_reg_909_pp0_iter1_reg;
reg   [0:0] icmp_ln1104_reg_909_pp0_iter2_reg;
wire   [31:0] j_5_fu_301_p3;
wire   [0:0] icmp_ln1084_fu_337_p2;
reg   [0:0] icmp_ln1084_reg_918_pp0_iter2_reg;
wire   [0:0] icmp_ln674_2_fu_359_p2;
reg   [0:0] icmp_ln674_2_reg_922;
wire   [6:0] trunc_ln674_6_fu_365_p1;
reg   [6:0] trunc_ln674_6_reg_929;
wire   [6:0] trunc_ln674_7_fu_369_p1;
reg   [6:0] trunc_ln674_7_reg_937;
wire   [0:0] icmp_ln1085_fu_384_p2;
reg   [0:0] icmp_ln1085_reg_943;
reg   [0:0] icmp_ln1085_reg_943_pp0_iter2_reg;
wire   [4:0] trunc_ln1086_fu_390_p1;
reg   [4:0] trunc_ln1086_reg_948;
reg   [4:0] trunc_ln1086_reg_948_pp0_iter2_reg;
wire   [0:0] icmp_ln674_fu_404_p2;
reg   [0:0] icmp_ln674_reg_953;
wire   [6:0] trunc_ln674_fu_410_p1;
reg   [6:0] trunc_ln674_reg_960;
wire   [6:0] add_ln674_2_fu_438_p2;
reg   [6:0] add_ln674_2_reg_967;
wire   [0:0] icmp_ln414_fu_444_p2;
reg   [0:0] icmp_ln414_reg_972;
reg   [0:0] icmp_ln414_reg_972_pp0_iter2_reg;
wire   [4:0] trunc_ln414_fu_450_p1;
reg   [4:0] trunc_ln414_reg_980;
reg   [4:0] trunc_ln414_reg_980_pp0_iter2_reg;
wire   [4:0] trunc_ln414_2_fu_454_p1;
reg   [4:0] trunc_ln414_2_reg_988;
reg   [4:0] trunc_ln414_2_reg_988_pp0_iter2_reg;
wire   [6:0] sub_ln674_15_fu_515_p2;
reg   [6:0] sub_ln674_15_reg_994;
wire   [63:0] lshr_ln674_8_fu_525_p2;
reg   [63:0] lshr_ln674_8_reg_999;
wire   [6:0] sub_ln674_10_fu_566_p2;
reg   [6:0] sub_ln674_10_reg_1004;
wire   [63:0] lshr_ln674_fu_576_p2;
reg   [63:0] lshr_ln674_reg_1009;
wire   [4:0] sub_ln414_4_fu_617_p2;
reg   [4:0] sub_ln414_4_reg_1014;
wire   [15:0] shl_ln414_fu_627_p2;
reg   [15:0] shl_ln414_reg_1019;
wire   [15:0] localbuffer_V_11_fu_652_p1;
wire   [15:0] p_Result_25_fu_765_p2;
wire   [4:0] sub_ln674_16_fu_771_p2;
reg   [4:0] sub_ln674_16_reg_1035;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [15:0] ap_phi_reg_pp0_iter0_localbuffer_V_13_reg_173;
reg   [15:0] ap_phi_reg_pp0_iter1_localbuffer_V_13_reg_173;
reg   [15:0] ap_phi_reg_pp0_iter2_localbuffer_V_13_reg_173;
reg   [15:0] ap_phi_reg_pp0_iter3_localbuffer_V_13_reg_173;
reg   [15:0] ap_phi_reg_pp0_iter4_localbuffer_V_13_reg_173;
reg   [31:0] rem_fu_106;
wire   [31:0] rem_4_fu_373_p2;
wire   [31:0] rem_3_fu_458_p2;
reg    ap_block_state1;
reg   [63:0] p_Val2_s_fu_110;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] grp_fu_220_p1;
wire   [6:0] zext_ln1054_fu_234_p1;
wire   [11:0] cols_bound_per_npc_cast5_i_fu_225_p1;
wire   [11:0] sub26_i_fu_249_p2;
wire   [31:0] zext_ln1048_fu_271_p1;
wire   [31:0] add_ln1105_fu_295_p2;
wire   [4:0] xf_bits_per_clock_fu_313_p3;
wire   [6:0] ptr_width_minus_fu_327_p3;
wire   [31:0] zext_ln1079_fu_319_p1;
wire   [6:0] select_ln1093_fu_343_p3;
wire   [31:0] zext_ln1093_fu_349_p1;
wire   [31:0] grp_fu_182_p2;
wire   [31:0] sub_ln1093_fu_353_p2;
wire   [25:0] tmp_fu_394_p4;
wire   [5:0] zext_ln1079_1_fu_323_p1;
wire  signed [5:0] add_ln1090_fu_414_p2;
wire   [6:0] trunc_ln1090_fu_428_p1;
wire  signed [6:0] sext_ln1090_2_fu_424_p1;
wire   [6:0] sub_ln674_11_fu_432_p2;
wire  signed [31:0] sext_ln1090_fu_420_p1;
wire   [31:0] zext_ln1080_fu_333_p1;
wire   [6:0] sub_ln674_12_fu_482_p2;
wire   [6:0] sub_ln674_14_fu_491_p2;
reg   [63:0] tmp_36_fu_472_p4;
wire   [6:0] sub_ln674_13_fu_486_p2;
wire   [6:0] select_ln674_8_fu_495_p3;
wire   [6:0] select_ln674_10_fu_509_p3;
wire   [63:0] select_ln674_9_fu_502_p3;
wire   [63:0] zext_ln674_8_fu_521_p1;
wire   [6:0] add_ln674_fu_541_p2;
wire   [6:0] grp_fu_187_p2;
reg   [63:0] tmp_31_fu_531_p4;
wire   [6:0] select_ln674_fu_546_p3;
wire   [6:0] select_ln674_7_fu_560_p3;
wire   [63:0] select_ln674_6_fu_553_p3;
wire   [63:0] zext_ln674_fu_572_p1;
wire   [63:0] zext_ln674_7_fu_582_p1;
wire   [63:0] lshr_ln674_7_fu_585_p2;
wire   [63:0] p_Result_24_fu_591_p2;
wire   [4:0] sub_ln414_3_fu_601_p2;
wire   [4:0] select_ln414_fu_606_p3;
wire   [4:0] select_ln414_5_fu_611_p3;
wire   [15:0] tmp_39_fu_597_p1;
wire   [15:0] zext_ln414_4_fu_623_p1;
wire   [63:0] zext_ln674_9_fu_638_p1;
wire   [63:0] lshr_ln674_9_fu_641_p2;
wire   [63:0] p_Result_26_fu_647_p2;
wire   [63:0] zext_ln674_6_fu_656_p1;
wire   [63:0] lshr_ln674_6_fu_659_p2;
wire   [63:0] p_Result_s_fu_665_p2;
wire   [4:0] sub_ln414_fu_674_p2;
wire   [15:0] zext_ln414_fu_679_p1;
wire   [15:0] tmp_37_fu_670_p1;
wire   [15:0] lshr_ln414_fu_683_p2;
wire   [15:0] p_Result_23_fu_689_p2;
wire   [4:0] select_ln414_4_fu_702_p3;
reg   [15:0] tmp_35_fu_714_p4;
wire   [15:0] zext_ln414_5_fu_707_p1;
wire   [15:0] zext_ln414_6_fu_711_p1;
wire   [15:0] shl_ln414_2_fu_729_p2;
wire   [15:0] lshr_ln414_2_fu_735_p2;
wire   [15:0] and_ln414_fu_741_p2;
wire   [15:0] localbuffer_V_fu_695_p3;
wire   [15:0] xor_ln414_fu_747_p2;
wire   [15:0] select_ln414_6_fu_723_p3;
wire   [15:0] and_ln414_3_fu_753_p2;
wire   [15:0] and_ln414_4_fu_759_p2;
wire   [15:0] zext_ln674_10_fu_776_p1;
wire   [15:0] lshr_ln674_10_fu_779_p2;
wire   [15:0] select_ln1097_fu_785_p3;
wire    ap_CS_fsm_state10;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [31:0] grp_fu_220_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

pp_pipeline_accel_mul_32s_11ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
mul_32s_11ns_32_2_1_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(stride_bound_per_npc_reg_847),
    .din1(grp_fu_220_p1),
    .ce(1'b1),
    .dout(grp_fu_220_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1084_reg_918_pp0_iter2_reg == 1'd0) & (icmp_ln1073_reg_893_pp0_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter4_localbuffer_V_13_reg_173 <= localbuffer_V_11_fu_652_p1;
        end else if (((icmp_ln1084_reg_918_pp0_iter2_reg == 1'd1) & (icmp_ln1073_reg_893_pp0_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter4_localbuffer_V_13_reg_173 <= p_Result_25_fu_765_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_localbuffer_V_13_reg_173 <= ap_phi_reg_pp0_iter3_localbuffer_V_13_reg_173;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_275_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_162 <= add_ln1073_fu_265_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_162 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_275_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_151 <= j_5_fu_301_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_151 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stride_empty_n == 1'b0) | (last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_fu_110 <= 64'd0;
    end else if (((icmp_ln1084_reg_918 == 1'd1) & (icmp_ln1073_reg_893_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_s_fu_110 <= ldata1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stride_empty_n == 1'b0) | (last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rem_fu_106 <= 32'd0;
    end else if (((icmp_ln1073_reg_893 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_337_p2 == 1'd1))) begin
        rem_fu_106 <= rem_3_fu_458_p2;
    end else if (((icmp_ln1073_reg_893 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_337_p2 == 1'd0))) begin
        rem_fu_106 <= rem_4_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln1093_reg_883 <= add_ln1093_fu_259_p2;
        bound_reg_863 <= grp_fu_220_p2;
        strideBased_last_blk_width_reg_858 <= strideBased_last_blk_width_fu_228_p3;
        sub26_cast_i_reg_878 <= sub26_cast_i_fu_255_p1;
        sub4_i_reg_873 <= sub4_i_fu_243_p2;
        sub_i_reg_868 <= sub_i_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_893 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_337_p2 == 1'd1))) begin
        add_ln674_2_reg_967 <= add_ln674_2_fu_438_p2;
        icmp_ln1085_reg_943 <= icmp_ln1085_fu_384_p2;
        icmp_ln414_reg_972 <= icmp_ln414_fu_444_p2;
        icmp_ln674_reg_953 <= icmp_ln674_fu_404_p2;
        trunc_ln1086_reg_948 <= trunc_ln1086_fu_390_p1;
        trunc_ln414_2_reg_988 <= trunc_ln414_2_fu_454_p1;
        trunc_ln414_reg_980 <= trunc_ln414_fu_450_p1;
        trunc_ln674_reg_960 <= trunc_ln674_fu_410_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_localbuffer_V_13_reg_173 <= ap_phi_reg_pp0_iter0_localbuffer_V_13_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_localbuffer_V_13_reg_173 <= ap_phi_reg_pp0_iter1_localbuffer_V_13_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_localbuffer_V_13_reg_173 <= ap_phi_reg_pp0_iter2_localbuffer_V_13_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_275_p2 == 1'd1))) begin
        bLast_reg_897 <= bLast_fu_280_p2;
        bLast_width_reg_904 <= bLast_width_fu_285_p2;
        icmp_ln1104_reg_909 <= icmp_ln1104_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bLast_width_reg_904_pp0_iter1_reg <= bLast_width_reg_904;
        icmp_ln1073_reg_893 <= icmp_ln1073_fu_275_p2;
        icmp_ln1073_reg_893_pp0_iter1_reg <= icmp_ln1073_reg_893;
        icmp_ln1104_reg_909_pp0_iter1_reg <= icmp_ln1104_reg_909;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        bLast_width_reg_904_pp0_iter2_reg <= bLast_width_reg_904_pp0_iter1_reg;
        bLast_width_reg_904_pp0_iter3_reg <= bLast_width_reg_904_pp0_iter2_reg;
        icmp_ln1073_reg_893_pp0_iter2_reg <= icmp_ln1073_reg_893_pp0_iter1_reg;
        icmp_ln1084_reg_918_pp0_iter2_reg <= icmp_ln1084_reg_918;
        icmp_ln1085_reg_943_pp0_iter2_reg <= icmp_ln1085_reg_943;
        icmp_ln1104_reg_909_pp0_iter2_reg <= icmp_ln1104_reg_909_pp0_iter1_reg;
        icmp_ln1104_reg_909_pp0_iter3_reg <= icmp_ln1104_reg_909_pp0_iter2_reg;
        icmp_ln414_reg_972_pp0_iter2_reg <= icmp_ln414_reg_972;
        trunc_ln1086_reg_948_pp0_iter2_reg <= trunc_ln1086_reg_948;
        trunc_ln414_2_reg_988_pp0_iter2_reg <= trunc_ln414_2_reg_988;
        trunc_ln414_reg_980_pp0_iter2_reg <= trunc_ln414_reg_980;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_bound_per_npc_3_reg_819 <= cols_bound_per_npc_dout;
        last_blk_width_2_reg_825 <= last_blk_width_dout;
        rows_3_reg_814 <= rows_dout;
        stride_3_reg_831 <= stride_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cols_bound_per_npc_cast2_i_reg_837[10 : 0] <= cols_bound_per_npc_cast2_i_fu_202_p1[10 : 0];
        icmp_ln1056_reg_842 <= icmp_ln1056_fu_205_p2;
        stride_bound_per_npc_reg_847 <= stride_bound_per_npc_fu_210_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_893 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1084_reg_918 <= icmp_ln1084_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_893 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_337_p2 == 1'd0))) begin
        icmp_ln674_2_reg_922 <= icmp_ln674_2_fu_359_p2;
        trunc_ln674_6_reg_929 <= trunc_ln674_6_fu_365_p1;
        trunc_ln674_7_reg_937 <= trunc_ln674_7_fu_369_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1084_reg_918 == 1'd0) & (icmp_ln1073_reg_893_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln674_8_reg_999 <= lshr_ln674_8_fu_525_p2;
        sub_ln674_15_reg_994 <= sub_ln674_15_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1084_reg_918 == 1'd1) & (icmp_ln1073_reg_893_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1085_reg_943 == 1'd0))) begin
        lshr_ln674_reg_1009 <= lshr_ln674_fu_576_p2;
        sub_ln674_10_reg_1004 <= sub_ln674_10_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1084_reg_918 == 1'd1) & (icmp_ln1073_reg_893_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shl_ln414_reg_1019 <= shl_ln414_fu_627_p2;
        sub_ln414_4_reg_1014 <= sub_ln414_4_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (bLast_width_reg_904_pp0_iter2_reg == 1'd1))) begin
        sub_ln674_16_reg_1035 <= sub_ln674_16_fu_771_p2;
    end
end

always @ (*) begin
    if ((icmp_ln1073_fu_275_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_blk_n = cols_bound_per_npc_empty_n;
    end else begin
        cols_bound_per_npc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((stride_empty_n == 1'b0) | (last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_read = 1'b1;
    end else begin
        cols_bound_per_npc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1104_reg_909_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        imgInput_uv_467_blk_n = imgInput_uv_467_full_n;
    end else begin
        imgInput_uv_467_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1104_reg_909_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        imgInput_uv_467_write = 1'b1;
    end else begin
        imgInput_uv_467_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_blk_n = last_blk_width_empty_n;
    end else begin
        last_blk_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((stride_empty_n == 1'b0) | (last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_read = 1'b1;
    end else begin
        last_blk_width_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1084_reg_918 == 1'd1) & (icmp_ln1073_reg_893_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op113_read_state7 == 1'b1))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((stride_empty_n == 1'b0) | (last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        stride_blk_n = stride_empty_n;
    end else begin
        stride_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((stride_empty_n == 1'b0) | (last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        stride_read = 1'b1;
    end else begin
        stride_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((stride_empty_n == 1'b0) | (last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1073_fu_275_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1073_fu_275_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1073_fu_265_p2 = (i_reg_162 + 31'd1);

assign add_ln1090_fu_414_p2 = ($signed(zext_ln1079_1_fu_323_p1) + $signed(6'd63));

assign add_ln1093_fu_259_p2 = (zext_ln1054_fu_234_p1 + 7'd63);

assign add_ln1105_fu_295_p2 = (j_reg_151 + 32'd1);

assign add_ln674_2_fu_438_p2 = (sub_ln674_11_fu_432_p2 + 7'd63);

assign add_ln674_fu_541_p2 = ($signed(trunc_ln674_reg_960) + $signed(7'd65));

assign and_ln414_3_fu_753_p2 = (xor_ln414_fu_747_p2 & localbuffer_V_fu_695_p3);

assign and_ln414_4_fu_759_p2 = (select_ln414_6_fu_723_p3 & and_ln414_fu_741_p2);

assign and_ln414_fu_741_p2 = (shl_ln414_2_fu_729_p2 & lshr_ln414_2_fu_735_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1104_reg_909_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (imgInput_uv_467_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op113_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1104_reg_909_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (imgInput_uv_467_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op113_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1104_reg_909_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (imgInput_uv_467_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_predicate_op113_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((stride_empty_n == 1'b0) | (last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = ((ldata1_empty_n == 1'b0) & (ap_predicate_op113_read_state7 == 1'b1));
end

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4 = ((icmp_ln1104_reg_909_pp0_iter3_reg == 1'd1) & (imgInput_uv_467_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_localbuffer_V_13_reg_173 = 'bx;

always @ (*) begin
    ap_predicate_op113_read_state7 = ((icmp_ln1084_reg_918 == 1'd1) & (icmp_ln1073_reg_893_pp0_iter1_reg == 1'd1));
end

assign bLast_fu_280_p2 = ((j_reg_151 == sub_i_reg_868) ? 1'b1 : 1'b0);

assign bLast_width_fu_285_p2 = ((j_reg_151 == sub26_cast_i_reg_878) ? 1'b1 : 1'b0);

assign cols_bound_per_npc_cast2_i_fu_202_p1 = cols_bound_per_npc_3_reg_819;

assign cols_bound_per_npc_cast5_i_fu_225_p1 = cols_bound_per_npc_3_reg_819;

assign grp_fu_182_p2 = (32'd64 - rem_fu_106);

assign grp_fu_187_p2 = (7'd63 - trunc_ln674_reg_960);

assign grp_fu_220_p1 = grp_fu_220_p10;

assign grp_fu_220_p10 = rows_3_reg_814;

assign icmp_ln1056_fu_205_p2 = ((stride_3_reg_831 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln1073_fu_275_p2 = (($signed(zext_ln1048_fu_271_p1) < $signed(bound_reg_863)) ? 1'b1 : 1'b0);

assign icmp_ln1084_fu_337_p2 = (($signed(rem_fu_106) < $signed(zext_ln1079_fu_319_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_fu_384_p2 = ((rem_fu_106 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1104_fu_290_p2 = (($signed(j_reg_151) < $signed(cols_bound_per_npc_cast2_i_reg_837)) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_444_p2 = ((rem_fu_106 > sext_ln1090_fu_420_p1) ? 1'b1 : 1'b0);

assign icmp_ln674_2_fu_359_p2 = ((grp_fu_182_p2 > sub_ln1093_fu_353_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_404_p2 = ((tmp_fu_394_p4 != 26'd0) ? 1'b1 : 1'b0);

assign imgInput_uv_467_din = (select_ln1097_fu_785_p3 & ap_phi_reg_pp0_iter4_localbuffer_V_13_reg_173);

assign j_5_fu_301_p3 = ((bLast_fu_280_p2[0:0] == 1'b1) ? 32'd0 : add_ln1105_fu_295_p2);

assign localbuffer_V_11_fu_652_p1 = p_Result_26_fu_647_p2[15:0];

assign localbuffer_V_fu_695_p3 = ((icmp_ln1085_reg_943_pp0_iter2_reg[0:0] == 1'b1) ? 16'd0 : p_Result_23_fu_689_p2);

assign lshr_ln414_2_fu_735_p2 = 16'd65535 >> zext_ln414_6_fu_711_p1;

assign lshr_ln414_fu_683_p2 = 16'd65535 >> zext_ln414_fu_679_p1;

assign lshr_ln674_10_fu_779_p2 = 16'd65535 >> zext_ln674_10_fu_776_p1;

assign lshr_ln674_6_fu_659_p2 = 64'd18446744073709551615 >> zext_ln674_6_fu_656_p1;

assign lshr_ln674_7_fu_585_p2 = 64'd18446744073709551615 >> zext_ln674_7_fu_582_p1;

assign lshr_ln674_8_fu_525_p2 = select_ln674_9_fu_502_p3 >> zext_ln674_8_fu_521_p1;

assign lshr_ln674_9_fu_641_p2 = 64'd18446744073709551615 >> zext_ln674_9_fu_638_p1;

assign lshr_ln674_fu_576_p2 = select_ln674_6_fu_553_p3 >> zext_ln674_fu_572_p1;

assign p_Result_23_fu_689_p2 = (tmp_37_fu_670_p1 & lshr_ln414_fu_683_p2);

assign p_Result_24_fu_591_p2 = (lshr_ln674_7_fu_585_p2 & ldata1_dout);

assign p_Result_25_fu_765_p2 = (and_ln414_4_fu_759_p2 | and_ln414_3_fu_753_p2);

assign p_Result_26_fu_647_p2 = (lshr_ln674_9_fu_641_p2 & lshr_ln674_8_reg_999);

assign p_Result_s_fu_665_p2 = (lshr_ln674_reg_1009 & lshr_ln674_6_fu_659_p2);

assign ptr_width_minus_fu_327_p3 = ((bLast_reg_897[0:0] == 1'b1) ? sub4_i_reg_873 : 7'd48);

assign rem_3_fu_458_p2 = (rem_fu_106 + zext_ln1080_fu_333_p1);

assign rem_4_fu_373_p2 = (rem_fu_106 - zext_ln1079_fu_319_p1);

assign select_ln1093_fu_343_p3 = ((bLast_reg_897[0:0] == 1'b1) ? add_ln1093_reg_883 : 7'd79);

assign select_ln1097_fu_785_p3 = ((bLast_width_reg_904_pp0_iter3_reg[0:0] == 1'b1) ? lshr_ln674_10_fu_779_p2 : 16'd65535);

assign select_ln414_4_fu_702_p3 = ((icmp_ln414_reg_972_pp0_iter2_reg[0:0] == 1'b1) ? trunc_ln414_2_reg_988_pp0_iter2_reg : trunc_ln414_reg_980_pp0_iter2_reg);

assign select_ln414_5_fu_611_p3 = ((icmp_ln414_reg_972[0:0] == 1'b1) ? sub_ln414_3_fu_601_p2 : trunc_ln414_reg_980);

assign select_ln414_6_fu_723_p3 = ((icmp_ln414_reg_972_pp0_iter2_reg[0:0] == 1'b1) ? tmp_35_fu_714_p4 : shl_ln414_reg_1019);

assign select_ln414_fu_606_p3 = ((icmp_ln414_reg_972[0:0] == 1'b1) ? trunc_ln414_reg_980 : trunc_ln414_2_reg_988);

assign select_ln674_10_fu_509_p3 = ((icmp_ln674_2_reg_922[0:0] == 1'b1) ? sub_ln674_13_fu_486_p2 : trunc_ln674_6_reg_929);

assign select_ln674_6_fu_553_p3 = ((icmp_ln674_reg_953[0:0] == 1'b1) ? tmp_31_fu_531_p4 : p_Val2_s_fu_110);

assign select_ln674_7_fu_560_p3 = ((icmp_ln674_reg_953[0:0] == 1'b1) ? grp_fu_187_p2 : trunc_ln674_reg_960);

assign select_ln674_8_fu_495_p3 = ((icmp_ln674_2_reg_922[0:0] == 1'b1) ? sub_ln674_12_fu_482_p2 : sub_ln674_14_fu_491_p2);

assign select_ln674_9_fu_502_p3 = ((icmp_ln674_2_reg_922[0:0] == 1'b1) ? tmp_36_fu_472_p4 : p_Val2_s_fu_110);

assign select_ln674_fu_546_p3 = ((icmp_ln674_reg_953[0:0] == 1'b1) ? add_ln674_fu_541_p2 : grp_fu_187_p2);

assign sext_ln1090_2_fu_424_p1 = add_ln1090_fu_414_p2;

assign sext_ln1090_fu_420_p1 = add_ln1090_fu_414_p2;

assign shl_ln414_2_fu_729_p2 = 16'd65535 << zext_ln414_5_fu_707_p1;

assign shl_ln414_fu_627_p2 = tmp_39_fu_597_p1 << zext_ln414_4_fu_623_p1;

assign strideBased_last_blk_width_fu_228_p3 = ((icmp_ln1056_reg_842[0:0] == 1'b1) ? last_blk_width_2_reg_825 : 5'd16);

assign stride_bound_per_npc_fu_210_p3 = ((icmp_ln1056_fu_205_p2[0:0] == 1'b1) ? cols_bound_per_npc_cast2_i_fu_202_p1 : stride_3_reg_831);

assign sub26_cast_i_fu_255_p1 = $signed(sub26_i_fu_249_p2);

assign sub26_i_fu_249_p2 = ($signed(cols_bound_per_npc_cast5_i_fu_225_p1) + $signed(12'd4095));

assign sub4_i_fu_243_p2 = ($signed(7'd64) - $signed(zext_ln1054_fu_234_p1));

assign sub_i_fu_238_p2 = ($signed(stride_bound_per_npc_reg_847) + $signed(32'd4294967295));

assign sub_ln1093_fu_353_p2 = (zext_ln1093_fu_349_p1 - rem_fu_106);

assign sub_ln414_3_fu_601_p2 = (5'd15 - trunc_ln414_reg_980);

assign sub_ln414_4_fu_617_p2 = (5'd15 - select_ln414_fu_606_p3);

assign sub_ln414_fu_674_p2 = ($signed(5'd16) - $signed(trunc_ln1086_reg_948_pp0_iter2_reg));

assign sub_ln674_10_fu_566_p2 = (7'd63 - select_ln674_fu_546_p3);

assign sub_ln674_11_fu_432_p2 = ($signed(trunc_ln1090_fu_428_p1) - $signed(sext_ln1090_2_fu_424_p1));

assign sub_ln674_12_fu_482_p2 = (trunc_ln674_6_reg_929 - trunc_ln674_7_reg_937);

assign sub_ln674_13_fu_486_p2 = (7'd63 - trunc_ln674_6_reg_929);

assign sub_ln674_14_fu_491_p2 = (trunc_ln674_7_reg_937 - trunc_ln674_6_reg_929);

assign sub_ln674_15_fu_515_p2 = (7'd63 - select_ln674_8_fu_495_p3);

assign sub_ln674_16_fu_771_p2 = ($signed(5'd16) - $signed(last_blk_width_2_reg_825));

integer ap_tvar_int_0;

always @ (p_Val2_s_fu_110) begin
    for (ap_tvar_int_0 = 64 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 63 - 0) begin
            tmp_31_fu_531_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_31_fu_531_p4[ap_tvar_int_0] = p_Val2_s_fu_110[63 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (shl_ln414_reg_1019) begin
    for (ap_tvar_int_1 = 16 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 15 - 0) begin
            tmp_35_fu_714_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_35_fu_714_p4[ap_tvar_int_1] = shl_ln414_reg_1019[15 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Val2_s_fu_110) begin
    for (ap_tvar_int_2 = 64 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 63 - 0) begin
            tmp_36_fu_472_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_36_fu_472_p4[ap_tvar_int_2] = p_Val2_s_fu_110[63 - ap_tvar_int_2];
        end
    end
end

assign tmp_37_fu_670_p1 = p_Result_s_fu_665_p2[15:0];

assign tmp_39_fu_597_p1 = p_Result_24_fu_591_p2[15:0];

assign tmp_fu_394_p4 = {{grp_fu_182_p2[31:6]}};

assign trunc_ln1086_fu_390_p1 = rem_fu_106[4:0];

assign trunc_ln1090_fu_428_p1 = rem_fu_106[6:0];

assign trunc_ln414_2_fu_454_p1 = add_ln1090_fu_414_p2[4:0];

assign trunc_ln414_fu_450_p1 = rem_fu_106[4:0];

assign trunc_ln674_6_fu_365_p1 = grp_fu_182_p2[6:0];

assign trunc_ln674_7_fu_369_p1 = sub_ln1093_fu_353_p2[6:0];

assign trunc_ln674_fu_410_p1 = grp_fu_182_p2[6:0];

assign xf_bits_per_clock_fu_313_p3 = ((bLast_reg_897[0:0] == 1'b1) ? strideBased_last_blk_width_reg_858 : 5'd16);

assign xor_ln414_fu_747_p2 = (16'd65535 ^ and_ln414_fu_741_p2);

assign zext_ln1048_fu_271_p1 = i_reg_162;

assign zext_ln1054_fu_234_p1 = strideBased_last_blk_width_fu_228_p3;

assign zext_ln1079_1_fu_323_p1 = xf_bits_per_clock_fu_313_p3;

assign zext_ln1079_fu_319_p1 = xf_bits_per_clock_fu_313_p3;

assign zext_ln1080_fu_333_p1 = ptr_width_minus_fu_327_p3;

assign zext_ln1093_fu_349_p1 = select_ln1093_fu_343_p3;

assign zext_ln414_4_fu_623_p1 = select_ln414_5_fu_611_p3;

assign zext_ln414_5_fu_707_p1 = select_ln414_4_fu_702_p3;

assign zext_ln414_6_fu_711_p1 = sub_ln414_4_reg_1014;

assign zext_ln414_fu_679_p1 = sub_ln414_fu_674_p2;

assign zext_ln674_10_fu_776_p1 = sub_ln674_16_reg_1035;

assign zext_ln674_6_fu_656_p1 = sub_ln674_10_reg_1004;

assign zext_ln674_7_fu_582_p1 = add_ln674_2_reg_967;

assign zext_ln674_8_fu_521_p1 = select_ln674_10_fu_509_p3;

assign zext_ln674_9_fu_638_p1 = sub_ln674_15_reg_994;

assign zext_ln674_fu_572_p1 = select_ln674_7_fu_560_p3;

always @ (posedge ap_clk) begin
    cols_bound_per_npc_cast2_i_reg_837[31:11] <= 21'b000000000000000000000;
end

endmodule //pp_pipeline_accel_AxiStream2MatStream
