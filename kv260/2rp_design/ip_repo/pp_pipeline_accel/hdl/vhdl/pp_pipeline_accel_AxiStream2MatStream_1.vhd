-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pp_pipeline_accel_AxiStream2MatStream_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ldata1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    ldata1_empty_n : IN STD_LOGIC;
    ldata1_read : OUT STD_LOGIC;
    imgInput_y_466_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    imgInput_y_466_full_n : IN STD_LOGIC;
    imgInput_y_466_write : OUT STD_LOGIC;
    rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    cols_bound_per_npc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_bound_per_npc_empty_n : IN STD_LOGIC;
    cols_bound_per_npc_read : OUT STD_LOGIC;
    last_blk_width_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    last_blk_width_empty_n : IN STD_LOGIC;
    last_blk_width_read : OUT STD_LOGIC;
    stride_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    stride_empty_n : IN STD_LOGIC;
    stride_read : OUT STD_LOGIC );
end;


architecture behav of pp_pipeline_accel_AxiStream2MatStream_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv7_47 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ldata1_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1073_reg_864 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_864_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1084_reg_889 : STD_LOGIC_VECTOR (0 downto 0);
    signal imgInput_y_466_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal icmp_ln1104_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1104_reg_880_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_blk_n : STD_LOGIC;
    signal cols_bound_per_npc_blk_n : STD_LOGIC;
    signal last_blk_width_blk_n : STD_LOGIC;
    signal stride_blk_n : STD_LOGIC;
    signal j_reg_147 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_158 : STD_LOGIC_VECTOR (30 downto 0);
    signal rows_2_reg_794 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_bound_per_npc_2_reg_799 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_blk_width_1_reg_806 : STD_LOGIC_VECTOR (3 downto 0);
    signal stride_2_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1056_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1056_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal stride_bound_per_npc_fu_203_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal stride_bound_per_npc_reg_823 : STD_LOGIC_VECTOR (31 downto 0);
    signal strideBased_last_blk_width_fu_213_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal strideBased_last_blk_width_reg_829 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_reg_834 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_i_fu_223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_i_reg_839 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub4_i_fu_228_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub4_i_reg_844 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub26_i_fu_234_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub26_i_reg_849 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1093_fu_239_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1093_reg_854 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1073_fu_245_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op109_read_state7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1073_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_864_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_reg_868 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_reg_875 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_reg_875_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_reg_875_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_reg_875_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1104_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1104_reg_880_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1104_reg_880_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_fu_281_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1084_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1084_reg_889_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_1_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_1_reg_893 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_4_fu_345_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_4_reg_900 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_5_fu_349_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_5_reg_908 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1085_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1085_reg_914 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1085_reg_914_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1086_fu_370_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1086_reg_919 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1086_reg_919_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln674_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_reg_924 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_fu_390_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_reg_931 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln674_1_fu_418_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln674_1_reg_938 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln414_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_943 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_943_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln414_fu_430_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln414_reg_951 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln414_reg_951_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln414_1_fu_434_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln414_1_reg_959 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln414_1_reg_959_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln674_7_fu_495_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_7_reg_965 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln674_3_fu_505_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_3_reg_970 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln674_2_fu_546_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_2_reg_975 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln674_fu_556_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_reg_980 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln414_2_fu_597_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln414_2_reg_985 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln414_fu_607_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln414_reg_990 : STD_LOGIC_VECTOR (7 downto 0);
    signal localbuffer_V_6_fu_632_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_21_fu_745_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln674_8_fu_751_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln674_8_reg_1006 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal rem_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_2_fu_353_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_1_fu_438_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal p_Val2_s_fu_106 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln1054_fu_219_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1048_fu_251_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1105_fu_275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xf_bits_per_clock_fu_293_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ptr_width_minus_fu_307_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1079_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1093_fu_323_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1093_fu_329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_178_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1093_fu_333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_374_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1079_1_fu_303_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1090_fu_394_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1090_fu_408_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1090_1_fu_404_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_3_fu_412_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1090_fu_400_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1080_fu_313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln674_4_fu_462_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_6_fu_471_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_27_fu_452_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln674_5_fu_466_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_3_fu_475_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_5_fu_489_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_4_fu_482_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_3_fu_501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln674_fu_521_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_183_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_22_fu_511_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln674_fu_526_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_2_fu_540_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_1_fu_533_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_2_fu_562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_2_fu_565_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_20_fu_571_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln414_1_fu_581_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln414_fu_586_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln414_2_fu_591_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_30_fu_577_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln414_1_fu_603_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln674_4_fu_618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_4_fu_621_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_22_fu_627_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_1_fu_636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_1_fu_639_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_645_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln414_fu_654_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln414_fu_659_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_650_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln414_fu_663_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_fu_669_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln414_1_fu_682_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_26_fu_694_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln414_2_fu_687_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln414_3_fu_691_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln414_1_fu_709_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln414_1_fu_715_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln414_fu_721_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal localbuffer_V_fu_675_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln414_fu_727_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln414_3_fu_703_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln414_1_fu_733_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln414_2_fu_739_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln674_5_fu_756_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln674_5_fu_759_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1097_fu_765_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component pp_pipeline_accel_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mul_32s_32s_32_2_1_U67 : component pp_pipeline_accel_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => rows_2_reg_794,
        din1 => stride_bound_per_npc_reg_823,
        ce => ap_const_logic_1,
        dout => grp_fu_209_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((icmp_ln1084_reg_889_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1073_reg_864_pp0_iter2_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_169 <= localbuffer_V_6_fu_632_p1;
                elsif (((icmp_ln1084_reg_889_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln1073_reg_864_pp0_iter2_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_169 <= p_Result_21_fu_745_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_169 <= ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_169;
                end if;
            end if; 
        end if;
    end process;

    i_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1073_fu_255_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_reg_158 <= add_ln1073_fu_245_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_reg_158 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    j_reg_147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1073_fu_255_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                j_reg_147 <= j_4_fu_281_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_reg_147 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stride_empty_n = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_Val2_s_fu_106 <= ap_const_lv64_0;
            elsif (((icmp_ln1084_reg_889 = ap_const_lv1_1) and (icmp_ln1073_reg_864_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                p_Val2_s_fu_106 <= ldata1_dout;
            end if; 
        end if;
    end process;

    rem_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stride_empty_n = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                rem_fu_102 <= ap_const_lv32_0;
            elsif (((icmp_ln1073_reg_864 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1084_fu_317_p2 = ap_const_lv1_1))) then 
                rem_fu_102 <= rem_1_fu_438_p2;
            elsif (((icmp_ln1073_reg_864 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1084_fu_317_p2 = ap_const_lv1_0))) then 
                rem_fu_102 <= rem_2_fu_353_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln1093_reg_854 <= add_ln1093_fu_239_p2;
                bound_reg_834 <= grp_fu_209_p2;
                strideBased_last_blk_width_reg_829 <= strideBased_last_blk_width_fu_213_p3;
                sub26_i_reg_849 <= sub26_i_fu_234_p2;
                sub4_i_reg_844 <= sub4_i_fu_228_p2;
                sub_i_reg_839 <= sub_i_fu_223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_864 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1084_fu_317_p2 = ap_const_lv1_1))) then
                add_ln674_1_reg_938 <= add_ln674_1_fu_418_p2;
                icmp_ln1085_reg_914 <= icmp_ln1085_fu_364_p2;
                icmp_ln414_reg_943 <= icmp_ln414_fu_424_p2;
                icmp_ln674_reg_924 <= icmp_ln674_fu_384_p2;
                trunc_ln1086_reg_919 <= trunc_ln1086_fu_370_p1;
                trunc_ln414_1_reg_959 <= trunc_ln414_1_fu_434_p1;
                trunc_ln414_reg_951 <= trunc_ln414_fu_430_p1;
                trunc_ln674_reg_931 <= trunc_ln674_fu_390_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_169 <= ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_169;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_169 <= ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_169;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_169 <= ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_169;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1073_fu_255_p2 = ap_const_lv1_1))) then
                bLast_reg_868 <= bLast_fu_260_p2;
                bLast_width_reg_875 <= bLast_width_fu_265_p2;
                icmp_ln1104_reg_880 <= icmp_ln1104_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                bLast_width_reg_875_pp0_iter1_reg <= bLast_width_reg_875;
                icmp_ln1073_reg_864 <= icmp_ln1073_fu_255_p2;
                icmp_ln1073_reg_864_pp0_iter1_reg <= icmp_ln1073_reg_864;
                icmp_ln1104_reg_880_pp0_iter1_reg <= icmp_ln1104_reg_880;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                bLast_width_reg_875_pp0_iter2_reg <= bLast_width_reg_875_pp0_iter1_reg;
                bLast_width_reg_875_pp0_iter3_reg <= bLast_width_reg_875_pp0_iter2_reg;
                icmp_ln1073_reg_864_pp0_iter2_reg <= icmp_ln1073_reg_864_pp0_iter1_reg;
                icmp_ln1084_reg_889_pp0_iter2_reg <= icmp_ln1084_reg_889;
                icmp_ln1085_reg_914_pp0_iter2_reg <= icmp_ln1085_reg_914;
                icmp_ln1104_reg_880_pp0_iter2_reg <= icmp_ln1104_reg_880_pp0_iter1_reg;
                icmp_ln1104_reg_880_pp0_iter3_reg <= icmp_ln1104_reg_880_pp0_iter2_reg;
                icmp_ln414_reg_943_pp0_iter2_reg <= icmp_ln414_reg_943;
                trunc_ln1086_reg_919_pp0_iter2_reg <= trunc_ln1086_reg_919;
                trunc_ln414_1_reg_959_pp0_iter2_reg <= trunc_ln414_1_reg_959;
                trunc_ln414_reg_951_pp0_iter2_reg <= trunc_ln414_reg_951;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cols_bound_per_npc_2_reg_799 <= cols_bound_per_npc_dout;
                last_blk_width_1_reg_806 <= last_blk_width_dout;
                rows_2_reg_794 <= rows_dout;
                stride_2_reg_812 <= stride_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln1056_reg_818 <= icmp_ln1056_fu_198_p2;
                stride_bound_per_npc_reg_823 <= stride_bound_per_npc_fu_203_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_864 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1084_reg_889 <= icmp_ln1084_fu_317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_864 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1084_fu_317_p2 = ap_const_lv1_0))) then
                icmp_ln674_1_reg_893 <= icmp_ln674_1_fu_339_p2;
                trunc_ln674_4_reg_900 <= trunc_ln674_4_fu_345_p1;
                trunc_ln674_5_reg_908 <= trunc_ln674_5_fu_349_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1084_reg_889 = ap_const_lv1_0) and (icmp_ln1073_reg_864_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln674_3_reg_970 <= lshr_ln674_3_fu_505_p2;
                sub_ln674_7_reg_965 <= sub_ln674_7_fu_495_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1084_reg_889 = ap_const_lv1_1) and (icmp_ln1073_reg_864_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1085_reg_914 = ap_const_lv1_0))) then
                lshr_ln674_reg_980 <= lshr_ln674_fu_556_p2;
                sub_ln674_2_reg_975 <= sub_ln674_2_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1084_reg_889 = ap_const_lv1_1) and (icmp_ln1073_reg_864_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                shl_ln414_reg_990 <= shl_ln414_fu_607_p2;
                sub_ln414_2_reg_985 <= sub_ln414_2_fu_597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (bLast_width_reg_875_pp0_iter2_reg = ap_const_lv1_1))) then
                sub_ln674_8_reg_1006 <= sub_ln674_8_fu_751_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n, stride_empty_n, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, icmp_ln1073_fu_255_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((stride_empty_n = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln1073_fu_255_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln1073_fu_255_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln1073_fu_245_p2 <= std_logic_vector(unsigned(i_reg_158) + unsigned(ap_const_lv31_1));
    add_ln1090_fu_394_p2 <= std_logic_vector(unsigned(zext_ln1079_1_fu_303_p1) + unsigned(ap_const_lv5_1F));
    add_ln1093_fu_239_p2 <= std_logic_vector(unsigned(zext_ln1054_fu_219_p1) + unsigned(ap_const_lv7_3F));
    add_ln1105_fu_275_p2 <= std_logic_vector(unsigned(j_reg_147) + unsigned(ap_const_lv32_1));
    add_ln674_1_fu_418_p2 <= std_logic_vector(unsigned(sub_ln674_3_fu_412_p2) + unsigned(ap_const_lv7_3F));
    add_ln674_fu_521_p2 <= std_logic_vector(unsigned(trunc_ln674_reg_931) + unsigned(ap_const_lv7_41));
    and_ln414_1_fu_733_p2 <= (xor_ln414_fu_727_p2 and localbuffer_V_fu_675_p3);
    and_ln414_2_fu_739_p2 <= (select_ln414_3_fu_703_p3 and and_ln414_fu_721_p2);
    and_ln414_fu_721_p2 <= (shl_ln414_1_fu_709_p2 and lshr_ln414_1_fu_715_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ldata1_empty_n, imgInput_y_466_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, icmp_ln1104_reg_880_pp0_iter3_reg, ap_predicate_op109_read_state7)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln1104_reg_880_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (imgInput_y_466_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_predicate_op109_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ldata1_empty_n, imgInput_y_466_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, icmp_ln1104_reg_880_pp0_iter3_reg, ap_predicate_op109_read_state7)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln1104_reg_880_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (imgInput_y_466_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_predicate_op109_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ldata1_empty_n, imgInput_y_466_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, icmp_ln1104_reg_880_pp0_iter3_reg, ap_predicate_op109_read_state7)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln1104_reg_880_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (imgInput_y_466_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_predicate_op109_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n, stride_empty_n)
    begin
                ap_block_state1 <= ((stride_empty_n = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter2_assign_proc : process(ldata1_empty_n, ap_predicate_op109_read_state7)
    begin
                ap_block_state7_pp0_stage0_iter2 <= ((ldata1_empty_n = ap_const_logic_0) and (ap_predicate_op109_read_state7 = ap_const_boolean_1));
    end process;

        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter4_assign_proc : process(imgInput_y_466_full_n, icmp_ln1104_reg_880_pp0_iter3_reg)
    begin
                ap_block_state9_pp0_stage0_iter4 <= ((icmp_ln1104_reg_880_pp0_iter3_reg = ap_const_lv1_1) and (imgInput_y_466_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(icmp_ln1073_fu_255_p2)
    begin
        if ((icmp_ln1073_fu_255_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_169 <= "XXXXXXXX";

    ap_predicate_op109_read_state7_assign_proc : process(icmp_ln1073_reg_864_pp0_iter1_reg, icmp_ln1084_reg_889)
    begin
                ap_predicate_op109_read_state7 <= ((icmp_ln1084_reg_889 = ap_const_lv1_1) and (icmp_ln1073_reg_864_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bLast_fu_260_p2 <= "1" when (j_reg_147 = sub_i_reg_839) else "0";
    bLast_width_fu_265_p2 <= "1" when (j_reg_147 = sub26_i_reg_849) else "0";

    cols_bound_per_npc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_bound_per_npc_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_bound_per_npc_blk_n <= cols_bound_per_npc_empty_n;
        else 
            cols_bound_per_npc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cols_bound_per_npc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n, stride_empty_n)
    begin
        if ((not(((stride_empty_n = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_bound_per_npc_read <= ap_const_logic_1;
        else 
            cols_bound_per_npc_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_178_p2 <= std_logic_vector(unsigned(ap_const_lv32_40) - unsigned(rem_fu_102));
    grp_fu_183_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln674_reg_931));
    icmp_ln1056_fu_198_p2 <= "1" when (stride_2_reg_812 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln1073_fu_255_p2 <= "1" when (signed(zext_ln1048_fu_251_p1) < signed(bound_reg_834)) else "0";
    icmp_ln1084_fu_317_p2 <= "1" when (signed(rem_fu_102) < signed(zext_ln1079_fu_299_p1)) else "0";
    icmp_ln1085_fu_364_p2 <= "1" when (rem_fu_102 = ap_const_lv32_0) else "0";
    icmp_ln1104_fu_270_p2 <= "1" when (signed(j_reg_147) < signed(cols_bound_per_npc_2_reg_799)) else "0";
    icmp_ln414_fu_424_p2 <= "1" when (unsigned(rem_fu_102) > unsigned(sext_ln1090_fu_400_p1)) else "0";
    icmp_ln674_1_fu_339_p2 <= "1" when (unsigned(grp_fu_178_p2) > unsigned(sub_ln1093_fu_333_p2)) else "0";
    icmp_ln674_fu_384_p2 <= "0" when (tmp_fu_374_p4 = ap_const_lv26_0) else "1";

    imgInput_y_466_blk_n_assign_proc : process(imgInput_y_466_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln1104_reg_880_pp0_iter3_reg)
    begin
        if (((icmp_ln1104_reg_880_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            imgInput_y_466_blk_n <= imgInput_y_466_full_n;
        else 
            imgInput_y_466_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgInput_y_466_din <= (select_ln1097_fu_765_p3 and ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_169);

    imgInput_y_466_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln1104_reg_880_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1104_reg_880_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            imgInput_y_466_write <= ap_const_logic_1;
        else 
            imgInput_y_466_write <= ap_const_logic_0;
        end if; 
    end process;

    j_4_fu_281_p3 <= 
        ap_const_lv32_0 when (bLast_fu_260_p2(0) = '1') else 
        add_ln1105_fu_275_p2;

    last_blk_width_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, last_blk_width_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            last_blk_width_blk_n <= last_blk_width_empty_n;
        else 
            last_blk_width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    last_blk_width_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n, stride_empty_n)
    begin
        if ((not(((stride_empty_n = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            last_blk_width_read <= ap_const_logic_1;
        else 
            last_blk_width_read <= ap_const_logic_0;
        end if; 
    end process;


    ldata1_blk_n_assign_proc : process(ldata1_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln1073_reg_864_pp0_iter1_reg, icmp_ln1084_reg_889)
    begin
        if (((icmp_ln1084_reg_889 = ap_const_lv1_1) and (icmp_ln1073_reg_864_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ldata1_blk_n <= ldata1_empty_n;
        else 
            ldata1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ldata1_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op109_read_state7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op109_read_state7 = ap_const_boolean_1))) then 
            ldata1_read <= ap_const_logic_1;
        else 
            ldata1_read <= ap_const_logic_0;
        end if; 
    end process;

    localbuffer_V_6_fu_632_p1 <= p_Result_22_fu_627_p2(8 - 1 downto 0);
    localbuffer_V_fu_675_p3 <= 
        ap_const_lv8_0 when (icmp_ln1085_reg_914_pp0_iter2_reg(0) = '1') else 
        p_Result_19_fu_669_p2;
    lshr_ln414_1_fu_715_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv8_FF),to_integer(unsigned('0' & zext_ln414_3_fu_691_p1(8-1 downto 0)))));
    lshr_ln414_fu_663_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv8_FF),to_integer(unsigned('0' & zext_ln414_fu_659_p1(8-1 downto 0)))));
    lshr_ln674_1_fu_639_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_1_fu_636_p1(31-1 downto 0)))));
    lshr_ln674_2_fu_565_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_2_fu_562_p1(31-1 downto 0)))));
    lshr_ln674_3_fu_505_p2 <= std_logic_vector(shift_right(unsigned(select_ln674_4_fu_482_p3),to_integer(unsigned('0' & zext_ln674_3_fu_501_p1(31-1 downto 0)))));
    lshr_ln674_4_fu_621_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_4_fu_618_p1(31-1 downto 0)))));
    lshr_ln674_5_fu_759_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv8_FF),to_integer(unsigned('0' & zext_ln674_5_fu_756_p1(8-1 downto 0)))));
    lshr_ln674_fu_556_p2 <= std_logic_vector(shift_right(unsigned(select_ln674_1_fu_533_p3),to_integer(unsigned('0' & zext_ln674_fu_552_p1(31-1 downto 0)))));
    p_Result_19_fu_669_p2 <= (tmp_28_fu_650_p1 and lshr_ln414_fu_663_p2);
    p_Result_20_fu_571_p2 <= (lshr_ln674_2_fu_565_p2 and ldata1_dout);
    p_Result_21_fu_745_p2 <= (and_ln414_2_fu_739_p2 or and_ln414_1_fu_733_p2);
    p_Result_22_fu_627_p2 <= (lshr_ln674_4_fu_621_p2 and lshr_ln674_3_reg_970);
    p_Result_s_fu_645_p2 <= (lshr_ln674_reg_980 and lshr_ln674_1_fu_639_p2);
    ptr_width_minus_fu_307_p3 <= 
        sub4_i_reg_844 when (bLast_reg_868(0) = '1') else 
        ap_const_lv7_38;
    rem_1_fu_438_p2 <= std_logic_vector(unsigned(rem_fu_102) + unsigned(zext_ln1080_fu_313_p1));
    rem_2_fu_353_p2 <= std_logic_vector(unsigned(rem_fu_102) - unsigned(zext_ln1079_fu_299_p1));

    rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_blk_n <= rows_empty_n;
        else 
            rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n, stride_empty_n)
    begin
        if ((not(((stride_empty_n = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1093_fu_323_p3 <= 
        add_ln1093_reg_854 when (bLast_reg_868(0) = '1') else 
        ap_const_lv7_47;
    select_ln1097_fu_765_p3 <= 
        lshr_ln674_5_fu_759_p2 when (bLast_width_reg_875_pp0_iter3_reg(0) = '1') else 
        ap_const_lv8_FF;
    select_ln414_1_fu_682_p3 <= 
        trunc_ln414_1_reg_959_pp0_iter2_reg when (icmp_ln414_reg_943_pp0_iter2_reg(0) = '1') else 
        trunc_ln414_reg_951_pp0_iter2_reg;
    select_ln414_2_fu_591_p3 <= 
        sub_ln414_1_fu_581_p2 when (icmp_ln414_reg_943(0) = '1') else 
        trunc_ln414_reg_951;
    select_ln414_3_fu_703_p3 <= 
        tmp_26_fu_694_p4 when (icmp_ln414_reg_943_pp0_iter2_reg(0) = '1') else 
        shl_ln414_reg_990;
    select_ln414_fu_586_p3 <= 
        trunc_ln414_reg_951 when (icmp_ln414_reg_943(0) = '1') else 
        trunc_ln414_1_reg_959;
    select_ln674_1_fu_533_p3 <= 
        tmp_22_fu_511_p4 when (icmp_ln674_reg_924(0) = '1') else 
        p_Val2_s_fu_106;
    select_ln674_2_fu_540_p3 <= 
        grp_fu_183_p2 when (icmp_ln674_reg_924(0) = '1') else 
        trunc_ln674_reg_931;
    select_ln674_3_fu_475_p3 <= 
        sub_ln674_4_fu_462_p2 when (icmp_ln674_1_reg_893(0) = '1') else 
        sub_ln674_6_fu_471_p2;
    select_ln674_4_fu_482_p3 <= 
        tmp_27_fu_452_p4 when (icmp_ln674_1_reg_893(0) = '1') else 
        p_Val2_s_fu_106;
    select_ln674_5_fu_489_p3 <= 
        sub_ln674_5_fu_466_p2 when (icmp_ln674_1_reg_893(0) = '1') else 
        trunc_ln674_4_reg_900;
    select_ln674_fu_526_p3 <= 
        add_ln674_fu_521_p2 when (icmp_ln674_reg_924(0) = '1') else 
        grp_fu_183_p2;
        sext_ln1090_1_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1090_fu_394_p2),7));

        sext_ln1090_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1090_fu_394_p2),32));

    shl_ln414_1_fu_709_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_FF),to_integer(unsigned('0' & zext_ln414_2_fu_687_p1(8-1 downto 0)))));
    shl_ln414_fu_607_p2 <= std_logic_vector(shift_left(unsigned(tmp_30_fu_577_p1),to_integer(unsigned('0' & zext_ln414_1_fu_603_p1(8-1 downto 0)))));
    strideBased_last_blk_width_fu_213_p3 <= 
        last_blk_width_1_reg_806 when (icmp_ln1056_reg_818(0) = '1') else 
        ap_const_lv4_8;

    stride_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stride_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stride_blk_n <= stride_empty_n;
        else 
            stride_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stride_bound_per_npc_fu_203_p3 <= 
        cols_bound_per_npc_2_reg_799 when (icmp_ln1056_fu_198_p2(0) = '1') else 
        stride_2_reg_812;

    stride_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n, stride_empty_n)
    begin
        if ((not(((stride_empty_n = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stride_read <= ap_const_logic_1;
        else 
            stride_read <= ap_const_logic_0;
        end if; 
    end process;

    sub26_i_fu_234_p2 <= std_logic_vector(unsigned(cols_bound_per_npc_2_reg_799) + unsigned(ap_const_lv32_FFFFFFFF));
    sub4_i_fu_228_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(zext_ln1054_fu_219_p1));
    sub_i_fu_223_p2 <= std_logic_vector(signed(stride_bound_per_npc_reg_823) + signed(ap_const_lv32_FFFFFFFF));
    sub_ln1093_fu_333_p2 <= std_logic_vector(unsigned(zext_ln1093_fu_329_p1) - unsigned(rem_fu_102));
    sub_ln414_1_fu_581_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) - unsigned(trunc_ln414_reg_951));
    sub_ln414_2_fu_597_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) - unsigned(select_ln414_fu_586_p3));
    sub_ln414_fu_654_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(trunc_ln1086_reg_919_pp0_iter2_reg));
    sub_ln674_2_fu_546_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln674_fu_526_p3));
    sub_ln674_3_fu_412_p2 <= std_logic_vector(unsigned(trunc_ln1090_fu_408_p1) - unsigned(sext_ln1090_1_fu_404_p1));
    sub_ln674_4_fu_462_p2 <= std_logic_vector(unsigned(trunc_ln674_4_reg_900) - unsigned(trunc_ln674_5_reg_908));
    sub_ln674_5_fu_466_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln674_4_reg_900));
    sub_ln674_6_fu_471_p2 <= std_logic_vector(unsigned(trunc_ln674_5_reg_908) - unsigned(trunc_ln674_4_reg_900));
    sub_ln674_7_fu_495_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln674_3_fu_475_p3));
    sub_ln674_8_fu_751_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(last_blk_width_1_reg_806));
    
    tmp_22_fu_511_p4_proc : process(p_Val2_s_fu_106)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_22_fu_511_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_106;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_22_fu_511_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_22_fu_511_p4_i) := p_Val2_s_fu_106(64-1-tmp_22_fu_511_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_22_fu_511_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_26_fu_694_p4_proc : process(shl_ln414_reg_990)
    variable vlo_cpy : STD_LOGIC_VECTOR(8+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(8+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable tmp_26_fu_694_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(8 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(3 - 1 downto 0) := ap_const_lv32_7(3 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(3 - 1 downto 0) := ap_const_lv32_0(3 - 1 downto 0);
        v0_cpy := shl_ln414_reg_990;
        if (vlo_cpy(3 - 1 downto 0) > vhi_cpy(3 - 1 downto 0)) then
            vhi_cpy(3-1 downto 0) := std_logic_vector(8-1-unsigned(ap_const_lv32_0(3-1 downto 0)));
            vlo_cpy(3-1 downto 0) := std_logic_vector(8-1-unsigned(ap_const_lv32_7(3-1 downto 0)));
            for tmp_26_fu_694_p4_i in 0 to 8-1 loop
                v0_cpy(tmp_26_fu_694_p4_i) := shl_ln414_reg_990(8-1-tmp_26_fu_694_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(3-1 downto 0)))));

        section := (others=>'0');
        section(3-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(3-1 downto 0)) - unsigned(vlo_cpy(3-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(8-1 downto 0)))));
        res_mask := res_mask(8-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_26_fu_694_p4 <= resvalue(8-1 downto 0);
    end process;

    
    tmp_27_fu_452_p4_proc : process(p_Val2_s_fu_106)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_27_fu_452_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_106;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_27_fu_452_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_27_fu_452_p4_i) := p_Val2_s_fu_106(64-1-tmp_27_fu_452_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_27_fu_452_p4 <= resvalue(64-1 downto 0);
    end process;

    tmp_28_fu_650_p1 <= p_Result_s_fu_645_p2(8 - 1 downto 0);
    tmp_30_fu_577_p1 <= p_Result_20_fu_571_p2(8 - 1 downto 0);
    tmp_fu_374_p4 <= grp_fu_178_p2(31 downto 6);
    trunc_ln1086_fu_370_p1 <= rem_fu_102(4 - 1 downto 0);
    trunc_ln1090_fu_408_p1 <= rem_fu_102(7 - 1 downto 0);
    trunc_ln414_1_fu_434_p1 <= add_ln1090_fu_394_p2(4 - 1 downto 0);
    trunc_ln414_fu_430_p1 <= rem_fu_102(4 - 1 downto 0);
    trunc_ln674_4_fu_345_p1 <= grp_fu_178_p2(7 - 1 downto 0);
    trunc_ln674_5_fu_349_p1 <= sub_ln1093_fu_333_p2(7 - 1 downto 0);
    trunc_ln674_fu_390_p1 <= grp_fu_178_p2(7 - 1 downto 0);
    xf_bits_per_clock_fu_293_p3 <= 
        strideBased_last_blk_width_reg_829 when (bLast_reg_868(0) = '1') else 
        ap_const_lv4_8;
    xor_ln414_fu_727_p2 <= (ap_const_lv8_FF xor and_ln414_fu_721_p2);
    zext_ln1048_fu_251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_158),32));
    zext_ln1054_fu_219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(strideBased_last_blk_width_fu_213_p3),7));
    zext_ln1079_1_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_bits_per_clock_fu_293_p3),5));
    zext_ln1079_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_bits_per_clock_fu_293_p3),32));
    zext_ln1080_fu_313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ptr_width_minus_fu_307_p3),32));
    zext_ln1093_fu_329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1093_fu_323_p3),32));
    zext_ln414_1_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_2_fu_591_p3),8));
    zext_ln414_2_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_1_fu_682_p3),8));
    zext_ln414_3_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_2_reg_985),8));
    zext_ln414_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_fu_654_p2),8));
    zext_ln674_1_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_2_reg_975),64));
    zext_ln674_2_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln674_1_reg_938),64));
    zext_ln674_3_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_5_fu_489_p3),64));
    zext_ln674_4_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_7_reg_965),64));
    zext_ln674_5_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_8_reg_1006),8));
    zext_ln674_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_2_fu_540_p3),64));
end behav;
